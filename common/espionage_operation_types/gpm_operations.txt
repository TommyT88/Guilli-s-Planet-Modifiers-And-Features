# operation_type_name = {			# Key of the site, used for name lookup etc.
#	target = <target type>			# Valid target types are country, megastructure, starbase, fleet, army, pop_faction, spynetwork, federation and none (spy network target is the target then)
#	picture = <sprite key>			# GFX_* sprite key for the operation image
#	desc = <triggered event desc>	# Description generator for the operation, with scope this=spy network
#	stages = <int>					# Should match number of defined stages below.
#	potential = <trigger>			# Trigger checking if a scope with this=spy network is potential to use (this will add/remove this operation without giving the player a reason).
#	allow = <trigger>				# Trigger checking if a scope with this=spy network is allowed to use (this will toggle enable/disabled mode on buttons etc).
#	stage = {						# Stage definition, order dependent.
#		difficulty = <interval int>	# min max interval type. interval is defined either by '<int>' or '{ min = <int> max=<int> }' where the later will randomize a value between min and max.
#		icon = <string>				# icon gfx type.
#		event = <string>			# event to fire when finished the state.
#	}
#	stage = {...}					# Second stage, the total number of 'stage' entries should match value of 'stages'
#	on_roll_failed = <effect>		# Effect to fire when a roll fails, with scope this=spy operation.
#	on_create = <effect>			# Effect to fire upon operation creation, with scope this=spy operation.
#}

@diff_t0 = 4
@diff_t1 = 5
@diff_t2 = 6
@diff_t3 = 7
@diff_t4 = 8
@diff_t5 = 9
@diff_t6 = 10
@diff_t7 = 11
@diff_t8 = 12
@diff_t9 = 13
@diff_t10 = 14
@diff_t11 = 15
@diff_t12 = 16
@diff_t13 = 18
@diff_t14 = 18

@operationTargetedByTimer = 10800 #30 years during which the effects of an operation may be felt by select Spy Network events

# this = operation
# target = operation target
operation_gpm_gather_information_relic = {
	target = none
	categories = { op_cat_subterfuge }
	picture = GFX_evt_spymaster	
	desc = operation_gpm_gather_information_relic_desc
	stages = 1

	resources = {
		category = operations
		cost = {
			influence = 20
		}
		upkeep = {
			energy = 4
		}
	}

	spy_power_cost = 20
	potential = {

		#TEMP TO DEV TEST
		# owner = { is_ai = no }
		target = {
			OR = {
				AND = {
					has_relic = gpm_r_time_displacer
					NOT = { has_country_flag = gpm_has_r_time_displacer_relic@root.owner }
				}
				AND = {
					has_relic = r_dragon_trophy
					NOT = { has_country_flag = gpm_has_r_dragon_trophy_relic@root.owner }
				}
				AND = {
					has_relic = r_khans_throne
					NOT = { has_country_flag = gpm_has_r_khans_throne_relic@root.owner }
				}
				AND = {
					has_relic = r_worm_scales
					NOT = { has_country_flag = gpm_has_r_worm_scales_relic@root.owner }
				}
				AND = {
					has_relic = r_rubricator
					NOT = { has_country_flag = gpm_has_r_rubricator_relic@root.owner }
				}
				AND = {
					has_relic = r_galaxy
					NOT = { has_country_flag = gpm_has_r_galaxy_relic@root.owner }
				}
				AND = {
					has_relic = r_omnicodex
					NOT = { has_country_flag = gpm_has_r_omnicodex_relic@root.owner }
				}
				AND = {
					has_relic = r_surveyor
					NOT = { has_country_flag = gpm_has_r_surveyor_relic@root.owner }
				}
				AND = {
					has_relic = r_galatron
					NOT = { has_country_flag = gpm_has_r_galatron_relic@root.owner }
				}
				AND = {
					has_relic = r_ancient_sword
					NOT = { has_country_flag = gpm_has_r_ancient_sword_relic@root.owner }
				}
				AND = {
					has_relic = r_severed_head
					NOT = { has_country_flag = gpm_has_r_severed_head_relic@root.owner }
				}
				AND = {
					has_relic = r_prethoryn_queen
					NOT = { has_country_flag = gpm_has_r_prethoryn_queen_relic@root.owner }
				}
				AND = {
					has_relic = r_unbidden_warlock
					NOT = { has_country_flag = gpm_has_r_unbidden_warlock_relic@root.owner }
				}
				AND = {
					has_relic = r_contingency_core
					NOT = { has_country_flag = gpm_has_r_contingency_core_relic@root.owner }
				}
				AND = {
					has_relic = r_zro_crystal
					NOT = { has_country_flag = gpm_has_r_zro_crystal_relic@root.owner }
				}
				AND = {
					has_relic = r_the_last_baol
					NOT = { has_country_flag = gpm_has_r_the_last_baol_relic@root.owner }
				}
				AND = {
					has_relic = r_the_defragmentor
					NOT = { has_country_flag = gpm_has_r_the_defragmentor_relic@root.owner }
				}
				AND = {
					has_relic = r_reality_perforator
					NOT = { has_country_flag = gpm_has_r_reality_perforator_relic@root.owner }
				}
				AND = {
					has_relic = r_pox_sample
					NOT = { has_country_flag = gpm_has_r_pox_sample_relic@root.owner }
				}
				AND = {
					has_relic = r_cryo_core
					NOT = { has_country_flag = gpm_has_r_cryo_core_relic@root.owner }
				}
				AND = {
					has_relic = r_war_forge
					NOT = { has_country_flag = gpm_has_r_war_forge_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_ai_architect
					NOT = { has_country_flag = gpm_has_r_ai_architect_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_banner_of_the_fallen
					NOT = { has_country_flag = gpm_has_r_banner_of_the_fallen_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_cloaking_device
					NOT = { has_country_flag = gpm_has_r_cloaking_device_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_codex_administratum
					NOT = { has_country_flag = gpm_has_r_codex_administratum_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_datacube
					NOT = { has_country_flag = gpm_has_r_datacube_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_earthquake_engine
					NOT = { has_country_flag = gpm_has_r_earthquake_engine_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_encrypted_sct
					NOT = { has_country_flag = gpm_has_r_encrypted_sct_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_encyclopedia_galactica
					NOT = { has_country_flag = gpm_has_r_encyclopedia_galactica_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_enigmatic_advisor
					NOT = { has_country_flag = gpm_has_r_enigmatic_advisor_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_experimental_weapon
					NOT = { has_country_flag = gpm_has_r_experimental_weapon_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_fallout_emergency_replicator
					NOT = { has_country_flag = gpm_has_r_fallout_emergency_replicator_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_gravity_engine
					NOT = { has_country_flag = gpm_has_r_gravity_engine_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_manufactorium_ship
					NOT = { has_country_flag = gpm_has_r_manufactorium_ship_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_mysterious_shield_generator
					NOT = { has_country_flag = gpm_has_r_mysterious_shield_generator_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_positronic_microchip
					NOT = { has_country_flag = gpm_has_r_positronic_microchip_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_power_core
					NOT = { has_country_flag = gpm_has_r_power_core_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_q_storage_compressor
					NOT = { has_country_flag = gpm_has_r_q_storage_compressor_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_quantum_sphere
					NOT = { has_country_flag = gpm_has_r_quantum_sphere_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_self_assembly_hub
					NOT = { has_country_flag = gpm_has_r_self_assembly_hub_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_self_repairing_obelisk
					NOT = { has_country_flag = gpm_has_r_self_repairing_obelisk_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_sentinel_queen
					NOT = { has_country_flag = gpm_has_r_sentinel_queen_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_soul_gem
					NOT = { has_country_flag = gpm_has_r_soul_gem_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_venerable_dreadnaught
					NOT = { has_country_flag = gpm_has_r_venerable_dreadnaught_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_zero_energy_generator
					NOT = { has_country_flag = gpm_has_r_zero_energy_generator_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_alien_eggs
					NOT = { has_country_flag = gpm_has_r_alien_eggs_relic@root.owner }
				}
				AND = {
					has_relic = gpm_r_machine_world_core
					NOT = { has_country_flag = gpm_has_r_machine_world_core_relic@root.owner }
				}
			}
		}
	}
	allow = {
		custom_tooltip = {
			is_running_espionage_operation = no
			fail_text = operation_one_at_a_time
		}
	}
	stage = {
		difficulty = @diff_t2
		icon = GFX_espionage_chapter_icon_document
		event = gpm_operation.10
	}

	on_roll_failed = {
		standard_espionage_operation_on_roll_failed = {
			RANDOM_EVENTS = operation_random_events_low_stakes
		}
	}
	on_create = {
		target = {
			set_timed_country_flag = {
				flag = espionage_operation_targeted_by@root.owner #Used in random Spy Network events
				days = @operationTargetedByTimer
			}
		}
		#### DEBUG LOGGING ####
		log = ";OP - GATHER; operation_gpm_gather_information_relic launched by [this.owner.GetName] on [target.GetName]"
		#### ##################
	}
}

# this = operation
# target = operation target
operation_gpm_steal_relic = {
	target = none
	categories = { op_cat_subterfuge op_cat_technology }
	picture = GFX_evt_spymaster
	desc = operation_gpm_steal_relic_desc
	stages = 4

	resources = {
		category = operations
		cost = {
			influence = 500
		}
		upkeep = {
			energy = 5
		}
	}

	spy_power_cost = 70
	potential = {

		#TEMP TO DEV TEST
		# owner = { is_ai = no }

		target = {
			OR = {
				AND = {
					has_relic = gpm_r_time_displacer
					has_country_flag = gpm_has_r_time_displacer_relic@root.owner
				}
				AND = {
					has_relic = r_dragon_trophy
					has_country_flag = gpm_has_r_dragon_trophy_relic@root.owner
				}
				AND = {
					has_relic = r_khans_throne
					has_country_flag = gpm_has_r_khans_throne_relic@root.owner
				}
				AND = {
					has_relic = r_worm_scales
					has_country_flag = gpm_has_r_worm_scales_relic@root.owner
				}
				AND = {
					has_relic = r_rubricator
					has_country_flag = gpm_has_r_rubricator_relic@root.owner
				}
				AND = {
					has_relic = r_galaxy
					has_country_flag = gpm_has_r_galaxy_relic@root.owner
				}
				AND = {
					has_relic = r_omnicodex
					has_country_flag = gpm_has_r_omnicodex_relic@root.owner
				}
				AND = {
					has_relic = r_surveyor
					has_country_flag = gpm_has_r_surveyor_relic@root.owner
				}
				AND = {
					has_relic = r_galatron
					has_country_flag = gpm_has_r_galatron_relic@root.owner
				}
				AND = {
					has_relic = r_ancient_sword
					has_country_flag = gpm_has_r_ancient_sword_relic@root.owner
				}
				AND = {
					has_relic = r_severed_head
					has_country_flag = gpm_has_r_severed_head_relic@root.owner
				}
				AND = {
					has_relic = r_prethoryn_queen
					has_country_flag = gpm_has_r_prethoryn_queen_relic@root.owner
				}
				AND = {
					has_relic = r_unbidden_warlock
					has_country_flag = gpm_has_r_unbidden_warlock_relic@root.owner
				}
				AND = {
					has_relic = r_contingency_core
					has_country_flag = gpm_has_r_contingency_core_relic@root.owner
				}
				AND = {
					has_relic = r_zro_crystal
					has_country_flag = gpm_has_r_zro_crystal_relic@root.owner
				}
				AND = {
					has_relic = r_the_last_baol
					has_country_flag = gpm_has_r_the_last_baol_relic@root.owner
				}
				AND = {
					has_relic = r_the_defragmentor
					has_country_flag = gpm_has_r_the_defragmentor_relic@root.owner
				}
				AND = {
					has_relic = r_reality_perforator
					has_country_flag = gpm_has_r_reality_perforator_relic@root.owner
				}
				AND = {
					has_relic = r_pox_sample
					has_country_flag = gpm_has_r_pox_sample_relic@root.owner
				}
				AND = {
					has_relic = r_cryo_core
					has_country_flag = gpm_has_r_cryo_core_relic@root.owner
				}
				AND = {
					has_relic = r_war_forge
					has_country_flag = gpm_has_r_war_forge_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_ai_architect
					has_country_flag = gpm_has_r_ai_architect_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_banner_of_the_fallen
					has_country_flag = gpm_has_r_banner_of_the_fallen_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_cloaking_device
					has_country_flag = gpm_has_r_cloaking_device_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_codex_administratum
					has_country_flag = gpm_has_r_codex_administratum_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_datacube
					has_country_flag = gpm_has_r_datacube_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_earthquake_engine
					has_country_flag = gpm_has_r_earthquake_engine_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_encrypted_sct
					has_country_flag = gpm_has_r_encrypted_sct_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_encyclopedia_galactica
					has_country_flag = gpm_has_r_encyclopedia_galactica_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_enigmatic_advisor
					has_country_flag = gpm_has_r_enigmatic_advisor_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_experimental_weapon
					has_country_flag = gpm_has_r_experimental_weapon_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_fallout_emergency_replicator
					has_country_flag = gpm_has_r_fallout_emergency_replicator_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_gravity_engine
					has_country_flag = gpm_has_r_gravity_engine_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_manufactorium_ship
					has_country_flag = gpm_has_r_manufactorium_ship_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_mysterious_shield_generator
					has_country_flag = gpm_has_r_mysterious_shield_generator_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_positronic_microchip
					has_country_flag = gpm_has_r_positronic_microchip_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_power_core
					has_country_flag = gpm_has_r_power_core_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_q_storage_compressor
					has_country_flag = gpm_has_r_q_storage_compressor_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_quantum_sphere
					has_country_flag = gpm_has_r_quantum_sphere_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_self_assembly_hub
					has_country_flag = gpm_has_r_self_assembly_hub_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_self_repairing_obelisk
					has_country_flag = gpm_has_r_self_repairing_obelisk_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_sentinel_queen
					has_country_flag = gpm_has_r_sentinel_queen_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_soul_gem
					has_country_flag = gpm_has_r_soul_gem_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_venerable_dreadnaught
					has_country_flag = gpm_has_r_venerable_dreadnaught_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_zero_energy_generator
					has_country_flag = gpm_has_r_zero_energy_generator_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_alien_eggs
					has_country_flag = gpm_has_r_alien_eggs_relic@root.owner
				}
				AND = {
					has_relic = gpm_r_machine_world_core
					has_country_flag = gpm_has_r_machine_world_core_relic@root.owner
				}
			}
		}
	}
	allow = {
		custom_tooltip = {
			is_running_espionage_operation = no
			fail_text = operation_one_at_a_time
		}		
	}
	# The Crew
	stage = {
		difficulty = @diff_t10
		icon = GFX_espionage_chapter_icon_document
		event = gpm_operation.1
	}
	# The Setup
	stage = {
		difficulty = @diff_t10
		icon = GFX_espionage_chapter_icon_document
		event = gpm_operation.2
	}
	# The Heist
	stage = {
		difficulty = @diff_t11
		icon = GFX_espionage_chapter_icon_document
		event = gpm_operation.3
	}
	# The Getaway
	stage = {
		difficulty = @diff_t11
		icon = GFX_espionage_chapter_icon_document
		event = gpm_operation.4
	}

	on_roll_failed = {
		standard_espionage_operation_on_roll_failed = {
			RANDOM_EVENTS = operation_random_events_low_stakes
		}
	}
	on_create = {
		target = {
			set_timed_country_flag = {
				flag = espionage_operation_targeted_by@root.owner #Used in random Spy Network events
				days = @operationTargetedByTimer
			}
		}
		#### DEBUG LOGGING ####
		log = ";OP - STEAL; operation_gpm_steal_relic launched by [this.owner.GetName] on [target.GetName]"
		#### ##################
	}
}

operation_gpm_steal_minor_artifacts = {
	target = none
	categories = { op_cat_subterfuge op_cat_technology }
	picture = GFX_evt_physics_research
	desc = operation_gpm_steal_minor_artifacts_desc
	stages = 3

	resources = {
		category = operations
		cost = {
			energy = 800
		}
		upkeep = {
			energy = 8
		}
	}

	spy_power_cost = 30
	potential = {
		always = no # disabled for now
		#TEMP TO DEV TEST
		owner = { is_ai = no }

	}
	allow = {
		custom_tooltip = {
			fail_text = operation_steal_technology_enigmatic_engineering
			owner = {
				NOT = { has_country_flag = cannot_steal_enigmatic_tech@root.target } #set after failing this operation before, due to Enigmatic Engineering
			}
		}
		custom_tooltip = {
			fail_text = operation_steal_technology_too_recent
			NOT = { has_spynetwork_flag = recently_stole_technology }
		}
		custom_tooltip = {
			is_running_espionage_operation = no
			fail_text = operation_one_at_a_time
		}
	}
	stage = {
		difficulty = @diff_t4
		icon = GFX_espionage_chapter_icon_surveillance
		event = operation.1020
	}
	stage = {
		difficulty = @diff_t4
		icon = GFX_espionage_chapter_icon_target
		event = operation.1021
	}
	stage = {
		difficulty = @diff_t4
		icon = GFX_espionage_chapter_icon_security
		event = operation.1022
	}
	on_roll_failed = {
		standard_espionage_operation_on_roll_failed = {
			RANDOM_EVENTS = operation_random_events_generic
		}
	}
	on_create = {
		target = {
			set_timed_country_flag = {
				flag = espionage_operation_targeted_by@root.owner #Used in random Spy Network events
				days = @operationTargetedByTimer
			}
		}
	}
}

operation_gpm_sabotage_planet = {
	categories = { op_cat_sabotage op_cat_military }
	picture = GFX_evt_space_station
	desc = operation_gpm_sabotage_planet_desc
	stages = 3

	resources = {
		category = operations
		cost = {
			energy = 1000
		}
		upkeep = {
			energy = 9
		}
	}

	spy_power_cost = 50
	target = starbase

	potential = {
		always = no # disabled for now
		#TEMP TO DEV TEST
		owner = { is_ai = no }

	}
	# target_potential = {
		
	# }
	allow = {
		custom_tooltip = {
			fail_text = operation_sabotage_starbase_no_targets
			target = {
				any_owned_starbase = {
					OR = {
						count_starbase_modules = { type != shipyard count > 0 }
						has_nonshipyard_starbase_buildings = yes
					}
				}
			}
		}
		custom_tooltip = {
			is_running_espionage_operation = no
			fail_text = operation_one_at_a_time
		}
	}
	target_allow = {
		custom_tooltip = {
			fail_text = operation_sabotage_starbase_no_targets
			OR = {
				count_starbase_modules = { type != shipyard count > 0 }
				has_nonshipyard_starbase_buildings = yes
			}
		}
	}
	stage = {
		difficulty = @diff_t5
		icon = GFX_espionage_chapter_icon_motion
		event = operation.2000
	}
	stage = {
		difficulty = @diff_t5
		icon = GFX_espionage_chapter_icon_target
		event = operation.2001
	}
	stage = {
		difficulty = @diff_t5
		icon = GFX_espionage_chapter_icon_success
		event = operation.2002
	}
	on_roll_failed = {
		standard_espionage_operation_on_roll_failed = { RANDOM_EVENTS = operation_random_events_sabotage_targeted } #Requires a bespoke set of trigger scopes given 'target' is not a country
	}
	on_create = {
		target.owner = {
			set_timed_country_flag = {
				flag = espionage_operation_targeted_by@root.owner #Used in random Spy Network events
				days = @operationTargetedByTimer
			}
		}
	}
}