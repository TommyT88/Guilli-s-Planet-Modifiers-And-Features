namespace = gpm_operation

# DEBUG EVENT TO GIVE ALL EMPIRES A RELIC
country_event = {
	id = gpm_operation.9999
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		owner = {
			every_country = {
				limit = { gpm_is_country_type_default = yes }

				# give relics
				random_list = {
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_encyclopedia_galactica }
						set_global_flag = debugg_spawned_flag_gpm_r_encyclopedia_galactica
						add_relic = gpm_r_encyclopedia_galactica
						log = ";DEBUG; [root.GetName] received relic gpm_r_encyclopedia_galactica"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_zero_energy_generator }
						set_global_flag = debugg_spawned_flag_gpm_r_zero_energy_generator
						add_relic = gpm_r_zero_energy_generator
						log = ";DEBUG; [root.GetName] received relic gpm_r_zero_energy_generator"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_quantum_sphere }
						set_global_flag = debugg_spawned_flag_gpm_r_quantum_sphere
						add_relic = gpm_r_quantum_sphere
						log = ";DEBUG; [root.GetName] received relic gpm_r_quantum_sphere"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_ai_architect }
						set_global_flag = debugg_spawned_flag_gpm_r_ai_architect
						add_relic = gpm_r_ai_architect
						log = ";DEBUG; [root.GetName] received relic gpm_r_ai_architect"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_encrypted_sct }
						set_global_flag = debugg_spawned_flag_gpm_r_encrypted_sct
						add_relic = gpm_r_encrypted_sct
						log = ";DEBUG; [root.GetName] received relic gpm_r_encrypted_sct"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_experimental_weapon }
						set_global_flag = debugg_spawned_flag_gpm_r_experimental_weapon
						add_relic = gpm_r_experimental_weapon
						log = ";DEBUG; [root.GetName] received relic gpm_r_experimental_weapon"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_fallout_emergency_replicator }
						set_global_flag = debugg_spawned_flag_gpm_r_fallout_emergency_replicator
						add_relic = gpm_r_fallout_emergency_replicator
						log = ";DEBUG; [root.GetName] received relic gpm_r_fallout_emergency_replicator"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_power_core }
						set_global_flag = debugg_spawned_flag_gpm_r_power_core
						add_relic = gpm_r_power_core
						log = ";DEBUG; [root.GetName] received relic gpm_r_power_core"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_mysterious_shield_generator }
						set_global_flag = debugg_spawned_flag_gpm_r_mysterious_shield_generator
						add_relic = gpm_r_mysterious_shield_generator
						log = ";DEBUG; [root.GetName] received relic gpm_r_mysterious_shield_generator"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_gravity_engine }
						set_global_flag = debugg_spawned_flag_gpm_r_gravity_engine
						add_relic = gpm_r_gravity_engine
						log = ";DEBUG; [root.GetName] received relic gpm_r_gravity_engine"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_codex_administratum }
						set_global_flag = debugg_spawned_flag_gpm_r_codex_administratum
						add_relic = gpm_r_codex_administratum
						log = ";DEBUG; [root.GetName] received relic gpm_r_codex_administratum"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_enigmatic_advisor }
						set_global_flag = debugg_spawned_flag_gpm_r_enigmatic_advisor
						add_relic = gpm_r_enigmatic_advisor
						log = ";DEBUG; [root.GetName] received relic gpm_r_enigmatic_advisor"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_positronic_microchip }
						set_global_flag = debugg_spawned_flag_gpm_r_positronic_microchip
						add_relic = gpm_r_positronic_microchip
						log = ";DEBUG; [root.GetName] received relic gpm_r_positronic_microchip"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_venerable_dreadnaught }
						set_global_flag = debugg_spawned_flag_gpm_r_venerable_dreadnaught
						add_relic = gpm_r_venerable_dreadnaught
						log = ";DEBUG; [root.GetName] received relic gpm_r_venerable_dreadnaught"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_sentinel_queen }
						set_global_flag = debugg_spawned_flag_gpm_r_sentinel_queen
						add_relic = gpm_r_sentinel_queen
						log = ";DEBUG; [root.GetName] received relic gpm_r_sentinel_queen"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_earthquake_engine }
						set_global_flag = debugg_spawned_flag_gpm_r_earthquake_engine
						add_relic = gpm_r_earthquake_engine
						log = ";DEBUG; [root.GetName] received relic gpm_r_earthquake_engine"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_manufactorium_ship }
						set_global_flag = debugg_spawned_flag_gpm_r_manufactorium_ship
						add_relic = gpm_r_manufactorium_ship
						log = ";DEBUG; [root.GetName] received relic gpm_r_manufactorium_ship"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_datacube }
						set_global_flag = debugg_spawned_flag_gpm_r_datacube
						add_relic = gpm_r_datacube
						log = ";DEBUG; [root.GetName] received relic gpm_r_datacube"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_self_assembly_hub }
						set_global_flag = debugg_spawned_flag_gpm_r_self_assembly_hub
						add_relic = gpm_r_self_assembly_hub
						log = ";DEBUG; [root.GetName] received relic gpm_r_self_assembly_hub"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_banner_of_the_fallen }
						set_global_flag = debugg_spawned_flag_gpm_r_banner_of_the_fallen
						add_relic = gpm_r_banner_of_the_fallen
						log = ";DEBUG; [root.GetName] received relic gpm_r_banner_of_the_fallen"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_cloaking_device }
						set_global_flag = debugg_spawned_flag_gpm_r_cloaking_device
						add_relic = gpm_r_cloaking_device
						log = ";DEBUG; [root.GetName] received relic gpm_r_cloaking_device"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_q_storage_compressor }
						set_global_flag = debugg_spawned_flag_gpm_r_q_storage_compressor
						add_relic = gpm_r_q_storage_compressor
						log = ";DEBUG; [root.GetName] received relic gpm_r_q_storage_compressor"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_soul_gem }
						set_global_flag = debugg_spawned_flag_gpm_r_soul_gem
						add_relic = gpm_r_soul_gem
						log = ";DEBUG; [root.GetName] received relic gpm_r_soul_gem"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_self_repairing_obelisk }
						set_global_flag = debugg_spawned_flag_gpm_r_self_repairing_obelisk
						add_relic = gpm_r_self_repairing_obelisk
						log = ";DEBUG; [root.GetName] received relic gpm_r_self_repairing_obelisk"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_time_displacer }
						set_global_flag = debugg_spawned_flag_gpm_r_time_displacer
						add_relic = gpm_r_time_displacer
						log = ";DEBUG; [root.GetName] received relic gpm_r_time_displacer"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_alien_eggs }
						set_global_flag = debugg_spawned_flag_gpm_r_alien_eggs
						add_relic = gpm_r_alien_eggs
						log = ";DEBUG; [root.GetName] received relic gpm_r_alien_eggs"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_machine_world_core }
						set_global_flag = debugg_spawned_flag_gpm_r_machine_world_core
						add_relic = gpm_r_machine_world_core
						log = ";DEBUG; [root.GetName] received relic gpm_r_machine_world_core"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_mars_rover }
						set_global_flag = debugg_spawned_flag_gpm_r_mars_rover
						add_relic = gpm_r_mars_rover
						log = ";DEBUG; [root.GetName] received relic gpm_r_mars_rover"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_dragon_trophy }
						set_global_flag = debugg_spawned_flag_r_dragon_trophy
						add_relic = r_dragon_trophy
						log = ";DEBUG; [root.GetName] received relic r_dragon_trophy"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_khans_throne }
						set_global_flag = debugg_spawned_flag_r_khans_throne
						add_relic = r_khans_throne
						log = ";DEBUG; [root.GetName] received relic r_khans_throne"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_worm_scales }
						set_global_flag = debugg_spawned_flag_r_worm_scales
						add_relic = r_worm_scales
						log = ";DEBUG; [root.GetName] received relic r_worm_scales"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_rubricator }
						set_global_flag = debugg_spawned_flag_r_rubricator
						add_relic = r_rubricator
						log = ";DEBUG; [root.GetName] received relic r_rubricator"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_galaxy }
						set_global_flag = debugg_spawned_flag_r_galaxy
						add_relic = r_galaxy
						log = ";DEBUG; [root.GetName] received relic r_galaxy"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_omnicodex }
						set_global_flag = debugg_spawned_flag_r_omnicodex
						add_relic = r_omnicodex
						log = ";DEBUG; [root.GetName] received relic r_omnicodex"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_surveyor }
						set_global_flag = debugg_spawned_flag_r_surveyor
						add_relic = r_surveyor
						log = ";DEBUG; [root.GetName] received relic r_surveyor"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_galatron }
						set_global_flag = debugg_spawned_flag_r_galatron
						add_relic = r_galatron
						log = ";DEBUG; [root.GetName] received relic r_galatron"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_ancient_sword }
						set_global_flag = debugg_spawned_flag_r_ancient_sword
						add_relic = r_ancient_sword
						log = ";DEBUG; [root.GetName] received relic r_ancient_sword"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_severed_head }
						set_global_flag = debugg_spawned_flag_r_severed_head
						add_relic = r_severed_head
						log = ";DEBUG; [root.GetName] received relic r_severed_head"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_prethoryn_queen }
						set_global_flag = debugg_spawned_flag_r_prethoryn_queen
						add_relic = r_prethoryn_queen
						log = ";DEBUG; [root.GetName] received relic r_prethoryn_queen"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_unbidden_warlock }
						set_global_flag = debugg_spawned_flag_r_unbidden_warlock
						add_relic = r_unbidden_warlock
						log = ";DEBUG; [root.GetName] received relic r_unbidden_warlock"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_contingency_core }
						set_global_flag = debugg_spawned_flag_r_contingency_core
						add_relic = r_contingency_core
						log = ";DEBUG; [root.GetName] received relic r_contingency_core"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_zro_crystal }
						set_global_flag = debugg_spawned_flag_r_zro_crystal
						add_relic = r_zro_crystal
						log = ";DEBUG; [root.GetName] received relic r_zro_crystal"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_the_last_baol }
						set_global_flag = debugg_spawned_flag_r_the_last_baol
						add_relic = r_the_last_baol
						log = ";DEBUG; [root.GetName] received relic r_the_last_baol"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_the_defragmentor }
						set_global_flag = debugg_spawned_flag_r_the_defragmentor
						add_relic = r_the_defragmentor
						log = ";DEBUG; [root.GetName] received relic r_the_defragmentor"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_reality_perforator }
						set_global_flag = debugg_spawned_flag_r_reality_perforator
						add_relic = r_reality_perforator
						log = ";DEBUG; [root.GetName] received relic r_reality_perforator"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_pox_sample }
						set_global_flag = debugg_spawned_flag_r_pox_sample
						add_relic = r_pox_sample
						log = ";DEBUG; [root.GetName] received relic r_pox_sample"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_cryo_core }
						set_global_flag = debugg_spawned_flag_r_cryo_core
						add_relic = r_cryo_core
						log = ";DEBUG; [root.GetName] received relic r_cryo_core"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_war_forge }
						set_global_flag = debugg_spawned_flag_r_war_forge
						add_relic = r_war_forge
						log = ";DEBUG; [root.GetName] received relic r_war_forge"
					}
				}
			}
		}
	}
}

###########################
# STEAL RELIC
###########################
# this = operation; from = target (country)

# The Crew
# owner = the operating empire
# from = target
espionage_operation_event = {
	id = gpm_operation.1
	title = gpm_operation.1.name
	desc = gpm_operation.1.desc

	picture = GFX_evt_conclave
	show_sound = event_espionage_concluded
	espionage_operation = yes
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		# We set a timed flag so the AI doens't spam relic heist too frequently
		owner = { set_timed_country_flag = { flag = gpm_recent_heist days = 5400 } }
		from = { set_timed_country_flag = { flag = gpm_recent_heist days = 5400 } }
	}

	option = {
		name = gpm_operation.1.a
		trigger = {
			from = {
				OR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
	}

	# If our target has no relics (left) we end this operation, show a message and refund some influence
	option = {
		name = UNFORTUNATE
		trigger = {
			from = {
				NOR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
		hidden_effect = {
			owner = { country_event = { id = gpm_operation.8 } }
			set_espionage_operation_progress_locked = yes
		}
	}
}

# The Setup
# owner = the operating empire
# from = target
espionage_operation_event = {
	id = gpm_operation.2
	title = gpm_operation.2.name
	desc = gpm_operation.2.desc

	picture = GFX_evt_decryption
	show_sound = event_espionage_concluded
	espionage_operation = yes
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
	}

	option = {
		name = gpm_operation.2.a
		trigger = {
			from = {
				OR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
		hidden_effect = {
			from = {
				if = {
					limit = {
						has_intel_level = {
							category = technology
							level >= 1
							who = owner
						}
					}
					log = "<< RELICS >> | STEAL_RELIC <<< create message on FROM = [FROM.GetName]; warning impending heist"
					create_message = {
						type = GPM_MESSAGE_STEAL_RELIC_WARNING
						localization = GPM_MESSAGE_STEAL_RELIC_WARNING_DESC
						days = 180
						target = FROM.capital_scope # target capital
						variable = {
							type = name
							localization = COUNTRY
							scope = owner
						}
					}
				}
			}
		}
	}

	# If our target has no relics (left) we end this operation, show a message and refund some influence
	option = {
		name = UNFORTUNATE
		trigger = {
			from = {
				NOR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
		hidden_effect = {
			owner = { country_event = { id = gpm_operation.8 } }
			set_espionage_operation_progress_locked = yes
		}
	}
}

# The Heist
# owner = the operating empire
# from = target
espionage_operation_event = {
	id = gpm_operation.3
	title = gpm_operation.3.name
	desc = gpm_operation.3.desc

	picture = GFX_evt_gunrunning
	show_sound = event_espionage_concluded
	espionage_operation = yes
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
	}

	option = {
		name = gpm_operation.3.a
		trigger = {
			from = {
				OR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
	}

	# If our target has no relics (left) we end this operation, show a message and refund some influence
	option = {
		name = UNFORTUNATE
		trigger = {
			from = {
				NOR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
		hidden_effect = {
			owner = { country_event = { id = gpm_operation.8 } }
			set_espionage_operation_progress_locked = yes
		}
	}
}

# The Getaway
# owner = the operating empire
# from = target
espionage_operation_event = {
	id = gpm_operation.4
	title = gpm_operation.4.name
	desc = gpm_operation.4.desc

	picture = GFX_evt_cargoship_caravan
	show_sound = event_espionage_concluded
	espionage_operation = yes
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		log = "<< RELICS >> | STEAL_RELIC Operation.4 GETAWAY Finished on target ROOT.FROM = [root.from.GetName] by ROOT.OWNER = [root.owner.GetName]"
	}

	option = {
		name = gpm_operation.4.a
		trigger = {
			from = {
				OR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
		# check to see if the empire still has relics and then continue events
		# To do: add modifiers to the random events to direct them based on empire types, ethics and intelligence capacity
		owner = {
			random_list = {
				10 = { country_event = { id = gpm_operation.5 } }
				10 = { country_event = { id = gpm_operation.6 } }
				10 = { country_event = { id = gpm_operation.7 } }
			}
		}

		# Other known empires with sufficient intelligence are notified a relic has been stolen
		every_country = {
			limit = {
				gpm_is_country_type_default = yes
				AND = {
					has_communications = root.from
					has_communications = root.owner
				}
				NOR = {
					is_country = root.from
					is_country = root.owner
				}
				OR = {
					has_intel_level = {
						category = technology
						level >= 2
						who = root.owner
					}
					has_intel_level = {
						category = technology
						level >= 2
						who = root.from
					}
				}
			}
			log = "<< RELICS >> | RELIC STOLEN <<< create message on THIS = [THIS.GetName]; every country notifcation"
			create_message = {
				type = GPM_MESSAGE_RELIC_STOLEN
				localization = GPM_MESSAGE_RELIC_STOLEN_DESC
				days = 180
				target = FROM.capital_scope # target capital
				variable = {
					type = name
					localization = COUNTRY
					scope = root.owner
				}
			}
		}
	}

	# If our target has no relics (left) we end this operation, show a message and refund some influence
	option = {
		name = UNFORTUNATE
		trigger = {
			from = {
				NOR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
		hidden_effect = {
			owner = { country_event = { id = gpm_operation.8 } }
			set_espionage_operation_progress_locked = yes
		}
	}

	after = {
		set_espionage_operation_progress_locked = no
	}
}

# The Getaway (good) | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.5
	title = gpm_operation.5.name
	desc = gpm_operation.5.desc

	picture = GFX_evt_analyzing_artifacts
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = "<< RELICS >> | STEAL_RELIC gpm_operation.5 (The Getaway GOOD) triggered by FROM.OWNER = [from.owner.GetName] on FROMFROM = [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.5.a
		gpm_steal_random_relic = yes
		# Target Empire gets a notifaction message because I'm nice like that
		hidden_effect = {
			fromfrom = {
				country_event = { id = gpm_operation.80 }
			}
		}
		hidden_effect = {
			# all relations get to know we "found" a new relic
			if = {
				limit = { num_owned_relics = 1 }
				every_relation = {
					limit = {
						gpm_is_country_type_default = yes
						has_communications = root.owner
					}
					log = "<< RELICS >> | RELIC STOLEN <<< create message on THIS = [THIS.GetName]; every relation notifcation"
					create_message = {
						type = GPM_MESSAGE_RELIC_POSSESSION
						localization = GPM_MESSAGE_RELIC_POSSESSION_DESC
						days = 30
						target = root.owner.capital_scope
						variable = {
							type = name
							localization = COUNTRY
							scope = root.owner
						}
					}
				}
			}
			if = {
				limit = { num_owned_relics > 1 }
				every_relation = {
					limit = {
						gpm_is_country_type_default = yes
						has_communications = root.owner
					}
					log = "<< RELICS >> | RELIC STOLEN <<< create message on THIS = [THIS.GetName]; every relation notifcation"
					create_message = {
						type = GPM_MESSAGE_RELIC_POSSESSION_MULTI
						localization = GPM_MESSAGE_RELIC_POSSESSION_MULTI_DESC
						days = 30
						target = root.owner.capital_scope
						variable = {
							type = name
							localization = COUNTRY
							scope = root.owner
						}
					}
				}
			}
		}
	}

	after = {
		destroy_espionage_operation = from
	}
}

# The Getaway (Enraged) | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.6
	title = gpm_operation.6.name
	desc = gpm_operation.6.desc
	picture = GFX_evt_laser_grid
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = "<< RELICS >> | STEAL_RELIC gpm_operation.5 (The Getaway ENRAGED) triggered by FROM.OWNER = [from.owner.GetName] on FROMFROM = [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.6.a
		gpm_steal_random_relic = yes
		fromfrom = {
			add_opinion_modifier = {
				who = root.owner
				modifier = opinion_gpm_stolen_relic
			}
		}

		# Target Empire gets a notifaction message because I'm nice like that
		hidden_effect = {
			fromfrom = {
				country_event = { id = gpm_operation.81 }
			}
			every_relation = {
				if = {
					limit = {
						gpm_is_country_type_default = yes
						has_communications = root.owner
						has_intel_level = {
							who = root.owner
							category = technology
							level < 2
						}
						num_owned_relics = 1
					}
					log = "<< RELICS >> | RELIC STOLEN <<< create message on THIS = [THIS.GetName]; every relation notifcation"
					create_message = {
						type = GPM_MESSAGE_RELIC_POSSESSION
						localization = GPM_MESSAGE_RELIC_POSSESSION_DESC
						days = 30
						target = root.owner.capital_scope
						variable = {
							type = name
							localization = COUNTRY
							scope = root.owner
						}
					}
				}
				if = {
					limit = {
						gpm_is_country_type_default = yes
						has_communications = root.owner
						has_intel_level = {
							who = root.owner
							category = technology
							level < 2
						}
						num_owned_relics > 1
					}
					log = "<< RELICS >> | RELIC STOLEN <<< create message on THIS = [THIS.GetName]; every relation notifcation"
					create_message = {
						type = GPM_MESSAGE_RELIC_POSSESSION_MULTI
						localization = GPM_MESSAGE_RELIC_POSSESSION_MULTI_DESC
						days = 30
						target = root.owner.capital_scope
						variable = {
							type = name
							localization = COUNTRY
							scope = root.owner
						}
					}
				}
				if = {
					limit = {
						gpm_is_country_type_default = yes
						has_communications = root.owner
						has_intel_level = {
							who = root.owner
							category = technology
							level >= 2
						}
					}
					log = "<< RELICS >> | RELIC STOLEN <<< create message on THIS = [THIS.GetName]; every relation notifcation"
					create_message = {
						type = GPM_MESSAGE_RELIC_STOLEN
						localization = GPM_MESSAGE_RELIC_STOLEN_DESC
						days = 30
						target = root.owner.capital_scope
						variable = {
							type = name
							localization = COUNTRY
							scope = root.owner
						}
						variable = {
							type = name
							localization = COUNTRY_TARGET
							scope = root.fromfrom
						}
					}
				}
			}
		}
	}

	after = {
		destroy_espionage_operation = from
	}
}

# The Getaway (Allies) | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.7
	title = gpm_operation.7.name
	desc = gpm_operation.7.desc
	picture = GFX_evt_archaeologists_escaping
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = "<< RELICS >> | STEAL_RELIC gpm_operation.5 (The Getaway ALLIES) triggered by FROM.OWNER = [from.owner.GetName] on FROMFROM = [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.7.a
		gpm_steal_random_relic = yes
		fromfrom = {
			add_opinion_modifier = {
				who = root.owner
				modifier = opinion_gpm_stolen_relic
			}
			if = {
				limit = { is_overlord = yes }
				every_subject = {
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
			}
		}
		every_country = {
			limit = {
				gpm_is_country_type_default = yes
				NOT = { is_country = fromfrom }
				OR = {
					is_overlord_to = fromfrom
					is_in_federation_with = fromfrom
					opinion_level = {
						who = fromfrom
						level >= excellent
					}
				}
			}
			add_opinion_modifier = {
				who = root.owner
				modifier = opinion_gpm_stolen_relic
			}
			if = {
				limit = { is_overlord = yes }
				every_subject = {
					limit = {
						NOT = { is_country = fromfrom }
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
			}
		}
		# Target Empire gets a notifaction message because I'm nice like that
		hidden_effect = {
			fromfrom = {
				country_event = { id = gpm_operation.82 }
			}
			every_relation = {
				if = {
					limit = {
						gpm_is_country_type_default = yes
						has_communications = root.owner
						has_intel_level = {
							who = root.owner
							category = technology
							level < 2
						}
						num_owned_relics = 1
					}
					log = "<< RELICS >> | RELIC STOLEN <<< create message on THIS = [THIS.GetName]; every relation notifcation"
					create_message = {
						type = GPM_MESSAGE_RELIC_POSSESSION
						localization = GPM_MESSAGE_RELIC_POSSESSION_DESC
						days = 30
						target = root.owner.capital_scope
						variable = {
							type = name
							localization = COUNTRY
							scope = root.owner
						}
					}
				}
				if = {
					limit = {
						gpm_is_country_type_default = yes
						has_communications = root.owner
						has_intel_level = {
							who = root.owner
							category = technology
							level < 2
						}
						num_owned_relics > 1
					}
					log = "<< RELICS >> | RELIC STOLEN <<< create message on THIS = [THIS.GetName]; every relation notifcation"
					create_message = {
						type = GPM_MESSAGE_RELIC_POSSESSION_MULTI
						localization = GPM_MESSAGE_RELIC_POSSESSION_MULTI_DESC
						days = 30
						target = root.owner.capital_scope
						variable = {
							type = name
							localization = COUNTRY
							scope = root.owner
						}
					}
				}
				if = {
					limit = {
						gpm_is_country_type_default = yes
						has_communications = root.owner
						has_intel_level = {
							who = root.owner
							category = technology
							level >= 2
						}
					}
					log = "<< RELICS >> | RELIC STOLEN <<< create message on THIS = [THIS.GetName]; every relation notifcation"
					create_message = {
						type = GPM_MESSAGE_RELIC_STOLEN
						localization = GPM_MESSAGE_RELIC_STOLEN_DESC
						days = 30
						target = root.owner.capital_scope
						variable = {
							type = name
							localization = COUNTRY
							scope = root.owner
						}
						variable = {
							type = name
							localization = COUNTRY_TARGET
							scope = root.fromfrom
						}
					}
				}
			}
		}
	}

	after = {
		destroy_espionage_operation = from
	}
}

### Target Empire Notification events ###

# Target empire has no relics / lost their relic before we got to it
# Message Event | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.8
	title = gpm_operation.8.name
	desc = gpm_operation.8.desc
	picture = GFX_evt_decryption
	show_sound = event_encrypted_comms
	is_triggered_only = yes

	immediate = {
		#### DEBUG LOGGING ####
		log = "<< RELICS >> | STEAL_RELIC gpm_operation.8 (Information Message event NO RELICS) triggered by FROM.OWNER = [from.owner.GetName] about relic FROM = [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = UNFORTUNATE
		# log = "fromfrom = [fromfrom.GetName], from = [from.GetName], from.owner = [from.owner.GetName], root = [root.GetName]"
		custom_tooltip = gpm_gather_information_NO_RELIC
		destroy_espionage_operation = from
		add_resource = { influence = 300 }
	}
}

# The Getaway (Good) Target Empire Notification Event | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.80
	title = gpm_operation.80.name
	desc = gpm_operation.80.desc
	picture = GFX_evt_ancient_artifact
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = "<< RELICS >> | STEAL_RELIC gpm_operation.80 (The Getaway good NOTIFICATION) triggered on FROM.OWNER = [from.owner.GetName] about relic FROMFROM = [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.80.a
		gpm_steal_relic_event_notifaction_tooltips = yes
	}
}

# The Getaway (Enraged) Target Empire Notification Event | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.81
	title = gpm_operation.80.name
	desc = gpm_operation.81.desc
	picture = GFX_evt_ancient_artifact
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = "<< RELICS >> | STEAL_RELIC gpm_operation.81 (The Getaway good NOTIFICATION) triggered on FROM.OWNER = [from.owner.GetName] about relic FROMFROM = [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.80.a
		gpm_steal_relic_event_notifaction_tooltips = yes
	}
}

# The Getaway (Allies) Target Empire Notification Event | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.82
	title = gpm_operation.80.name
	desc = gpm_operation.82.desc
	picture = GFX_evt_ancient_artifact
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = "<< RELICS >> | STEAL_RELIC gpm_operation.82 (The Getaway good NOTIFICATION) triggered on FROM.OWNER = [from.owner.GetName] about relic FROMFROM = [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.80.a
		gpm_steal_relic_event_notifaction_tooltips = yes
	}
}


# event to stop steal relic operations if either empire becomes a vassel or overlord
# This = subject
# From = subject's overlord
country_event = {
	id = gpm_operation.100
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		log = "<< RELICS >> | RELIC SUBJUGATION - ROOT = [root.GetName] became subject of FROM = [from.GetName]"

		# (country scope)
		# This = subject
		# From = subject's overlord
		# Overlord
		FROM = {
			if = {
				limit = { is_running_espionage_operation = yes }
				random_espionage_operation = {
					limit = {
						has_espionage_type = operation_gpm_steal_relic
						target = { is_same_value = root }
					}
					destroy_espionage_operation = THIS
					log = "<< RELICS >> | RELIC SUBJUGATION - Destroying Operation on Overlord FROM = [from.GetName]"
					PREV = { add_resource = { influence = 300 } }
				}
			}
		}

		# Subject
		THIS = {
			if = {
				limit = { is_running_espionage_operation = yes }
				random_espionage_operation = {
					limit = {
						has_espionage_type = operation_gpm_steal_relic
						target = { is_same_value = root }
					}
					destroy_espionage_operation = THIS
					log = "<< RELICS >> | RELIC SUBJUGATION - Destroying Operation on Subject ROOT = [root.GetName]"
					PREV = { add_resource = { influence = 300 } }
				}
			}
		}
	}
}
