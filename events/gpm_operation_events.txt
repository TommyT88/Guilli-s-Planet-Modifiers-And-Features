namespace = gpm_operation

# DEBUG EVENT TO GIVE ALL EMPIRES A RELIC
country_event = {
	id = gpm_operation.9999
	hide_window = yes 
	is_triggered_only = yes
	immediate = {
		owner = {
			every_country = {
				limit = { is_country_type = default }

				# give relics
				random_list = {
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_encyclopedia_galactica }
						set_global_flag = debugg_spawned_flag_gpm_r_encyclopedia_galactica
						add_relic = gpm_r_encyclopedia_galactica
						log = ";DEBUG; [root.GetName] received relic gpm_r_encyclopedia_galactica"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_zero_energy_generator }
						set_global_flag = debugg_spawned_flag_gpm_r_zero_energy_generator
						add_relic = gpm_r_zero_energy_generator
						log = ";DEBUG; [root.GetName] received relic gpm_r_zero_energy_generator"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_quantum_sphere }
						set_global_flag = debugg_spawned_flag_gpm_r_quantum_sphere
						add_relic = gpm_r_quantum_sphere
						log = ";DEBUG; [root.GetName] received relic gpm_r_quantum_sphere"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_ai_architect }
						set_global_flag = debugg_spawned_flag_gpm_r_ai_architect
						add_relic = gpm_r_ai_architect
						log = ";DEBUG; [root.GetName] received relic gpm_r_ai_architect"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_encrypted_sct }
						set_global_flag = debugg_spawned_flag_gpm_r_encrypted_sct
						add_relic = gpm_r_encrypted_sct
						log = ";DEBUG; [root.GetName] received relic gpm_r_encrypted_sct"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_experimental_weapon }
						set_global_flag = debugg_spawned_flag_gpm_r_experimental_weapon
						add_relic = gpm_r_experimental_weapon
						log = ";DEBUG; [root.GetName] received relic gpm_r_experimental_weapon"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_fallout_emergency_replicator }
						set_global_flag = debugg_spawned_flag_gpm_r_fallout_emergency_replicator
						add_relic = gpm_r_fallout_emergency_replicator
						log = ";DEBUG; [root.GetName] received relic gpm_r_fallout_emergency_replicator"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_power_core }
						set_global_flag = debugg_spawned_flag_gpm_r_power_core
						add_relic = gpm_r_power_core
						log = ";DEBUG; [root.GetName] received relic gpm_r_power_core"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_mysterious_shield_generator }
						set_global_flag = debugg_spawned_flag_gpm_r_mysterious_shield_generator
						add_relic = gpm_r_mysterious_shield_generator
						log = ";DEBUG; [root.GetName] received relic gpm_r_mysterious_shield_generator"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_gravity_engine }
						set_global_flag = debugg_spawned_flag_gpm_r_gravity_engine
						add_relic = gpm_r_gravity_engine
						log = ";DEBUG; [root.GetName] received relic gpm_r_gravity_engine"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_codex_administratum }
						set_global_flag = debugg_spawned_flag_gpm_r_codex_administratum
						add_relic = gpm_r_codex_administratum
						log = ";DEBUG; [root.GetName] received relic gpm_r_codex_administratum"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_enigmatic_advisor }
						set_global_flag = debugg_spawned_flag_gpm_r_enigmatic_advisor
						add_relic = gpm_r_enigmatic_advisor
						log = ";DEBUG; [root.GetName] received relic gpm_r_enigmatic_advisor"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_positronic_microchip }
						set_global_flag = debugg_spawned_flag_gpm_r_positronic_microchip
						add_relic = gpm_r_positronic_microchip
						log = ";DEBUG; [root.GetName] received relic gpm_r_positronic_microchip"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_venerable_dreadnaught }
						set_global_flag = debugg_spawned_flag_gpm_r_venerable_dreadnaught
						add_relic = gpm_r_venerable_dreadnaught
						log = ";DEBUG; [root.GetName] received relic gpm_r_venerable_dreadnaught"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_sentinel_queen }
						set_global_flag = debugg_spawned_flag_gpm_r_sentinel_queen
						add_relic = gpm_r_sentinel_queen
						log = ";DEBUG; [root.GetName] received relic gpm_r_sentinel_queen"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_earthquake_engine }
						set_global_flag = debugg_spawned_flag_gpm_r_earthquake_engine
						add_relic = gpm_r_earthquake_engine
						log = ";DEBUG; [root.GetName] received relic gpm_r_earthquake_engine"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_manufactorium_ship }
						set_global_flag = debugg_spawned_flag_gpm_r_manufactorium_ship
						add_relic = gpm_r_manufactorium_ship
						log = ";DEBUG; [root.GetName] received relic gpm_r_manufactorium_ship"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_datacube }
						set_global_flag = debugg_spawned_flag_gpm_r_datacube
						add_relic = gpm_r_datacube
						log = ";DEBUG; [root.GetName] received relic gpm_r_datacube"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_self_assembly_hub }
						set_global_flag = debugg_spawned_flag_gpm_r_self_assembly_hub
						add_relic = gpm_r_self_assembly_hub
						log = ";DEBUG; [root.GetName] received relic gpm_r_self_assembly_hub"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_banner_of_the_fallen }
						set_global_flag = debugg_spawned_flag_gpm_r_banner_of_the_fallen
						add_relic = gpm_r_banner_of_the_fallen
						log = ";DEBUG; [root.GetName] received relic gpm_r_banner_of_the_fallen"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_cloaking_device }
						set_global_flag = debugg_spawned_flag_gpm_r_cloaking_device
						add_relic = gpm_r_cloaking_device
						log = ";DEBUG; [root.GetName] received relic gpm_r_cloaking_device"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_q_storage_compressor }
						set_global_flag = debugg_spawned_flag_gpm_r_q_storage_compressor
						add_relic = gpm_r_q_storage_compressor
						log = ";DEBUG; [root.GetName] received relic gpm_r_q_storage_compressor"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_soul_gem }
						set_global_flag = debugg_spawned_flag_gpm_r_soul_gem
						add_relic = gpm_r_soul_gem
						log = ";DEBUG; [root.GetName] received relic gpm_r_soul_gem"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_self_repairing_obelisk }
						set_global_flag = debugg_spawned_flag_gpm_r_self_repairing_obelisk
						add_relic = gpm_r_self_repairing_obelisk
						log = ";DEBUG; [root.GetName] received relic gpm_r_self_repairing_obelisk"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_time_displacer }
						set_global_flag = debugg_spawned_flag_gpm_r_time_displacer
						add_relic = gpm_r_time_displacer
						log = ";DEBUG; [root.GetName] received relic gpm_r_time_displacer"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_alien_eggs }
						set_global_flag = debugg_spawned_flag_gpm_r_alien_eggs
						add_relic = gpm_r_alien_eggs
						log = ";DEBUG; [root.GetName] received relic gpm_r_alien_eggs"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_machine_world_core }
						set_global_flag = debugg_spawned_flag_gpm_r_machine_world_core
						add_relic = gpm_r_machine_world_core
						log = ";DEBUG; [root.GetName] received relic gpm_r_machine_world_core"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_gpm_r_mars_rover }
						set_global_flag = debugg_spawned_flag_gpm_r_mars_rover
						add_relic = gpm_r_mars_rover
						log = ";DEBUG; [root.GetName] received relic gpm_r_mars_rover"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_dragon_trophy }
						set_global_flag = debugg_spawned_flag_r_dragon_trophy
						add_relic = r_dragon_trophy
						log = ";DEBUG; [root.GetName] received relic r_dragon_trophy"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_khans_throne }
						set_global_flag = debugg_spawned_flag_r_khans_throne
						add_relic = r_khans_throne
						log = ";DEBUG; [root.GetName] received relic r_khans_throne"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_worm_scales }
						set_global_flag = debugg_spawned_flag_r_worm_scales
						add_relic = r_worm_scales
						log = ";DEBUG; [root.GetName] received relic r_worm_scales"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_rubricator }
						set_global_flag = debugg_spawned_flag_r_rubricator
						add_relic = r_rubricator
						log = ";DEBUG; [root.GetName] received relic r_rubricator"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_galaxy }
						set_global_flag = debugg_spawned_flag_r_galaxy
						add_relic = r_galaxy
						log = ";DEBUG; [root.GetName] received relic r_galaxy"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_omnicodex }
						set_global_flag = debugg_spawned_flag_r_omnicodex
						add_relic = r_omnicodex
						log = ";DEBUG; [root.GetName] received relic r_omnicodex"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_surveyor }
						set_global_flag = debugg_spawned_flag_r_surveyor
						add_relic = r_surveyor
						log = ";DEBUG; [root.GetName] received relic r_surveyor"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_galatron }
						set_global_flag = debugg_spawned_flag_r_galatron
						add_relic = r_galatron
						log = ";DEBUG; [root.GetName] received relic r_galatron"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_ancient_sword }
						set_global_flag = debugg_spawned_flag_r_ancient_sword
						add_relic = r_ancient_sword
						log = ";DEBUG; [root.GetName] received relic r_ancient_sword"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_severed_head }
						set_global_flag = debugg_spawned_flag_r_severed_head
						add_relic = r_severed_head
						log = ";DEBUG; [root.GetName] received relic r_severed_head"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_prethoryn_queen }
						set_global_flag = debugg_spawned_flag_r_prethoryn_queen
						add_relic = r_prethoryn_queen
						log = ";DEBUG; [root.GetName] received relic r_prethoryn_queen"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_unbidden_warlock }
						set_global_flag = debugg_spawned_flag_r_unbidden_warlock
						add_relic = r_unbidden_warlock
						log = ";DEBUG; [root.GetName] received relic r_unbidden_warlock"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_contingency_core }
						set_global_flag = debugg_spawned_flag_r_contingency_core
						add_relic = r_contingency_core
						log = ";DEBUG; [root.GetName] received relic r_contingency_core"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_zro_crystal }
						set_global_flag = debugg_spawned_flag_r_zro_crystal
						add_relic = r_zro_crystal
						log = ";DEBUG; [root.GetName] received relic r_zro_crystal"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_the_last_baol }
						set_global_flag = debugg_spawned_flag_r_the_last_baol
						add_relic = r_the_last_baol
						log = ";DEBUG; [root.GetName] received relic r_the_last_baol"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_the_defragmentor }
						set_global_flag = debugg_spawned_flag_r_the_defragmentor
						add_relic = r_the_defragmentor
						log = ";DEBUG; [root.GetName] received relic r_the_defragmentor"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_reality_perforator }
						set_global_flag = debugg_spawned_flag_r_reality_perforator
						add_relic = r_reality_perforator
						log = ";DEBUG; [root.GetName] received relic r_reality_perforator"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_pox_sample }
						set_global_flag = debugg_spawned_flag_r_pox_sample
						add_relic = r_pox_sample
						log = ";DEBUG; [root.GetName] received relic r_pox_sample"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_cryo_core }
						set_global_flag = debugg_spawned_flag_r_cryo_core
						add_relic = r_cryo_core
						log = ";DEBUG; [root.GetName] received relic r_cryo_core"
					}
					10 = {
						modifier = { factor = 0 has_global_flag = debugg_spawned_flag_r_war_forge }
						set_global_flag = debugg_spawned_flag_r_war_forge
						add_relic = r_war_forge
						log = ";DEBUG; [root.GetName] received relic r_war_forge"
					}
				}
			}
		}
	}
}

###########################
# STEAL RELIC
###########################
# this = operation; from = target (country)

# The Crew
# owner = the operating empire
# from = target
espionage_operation_event = {
	id = gpm_operation.1
	title = gpm_operation.1.name
	desc = gpm_operation.1.desc

	picture = GFX_evt_conclave
	show_sound = event_espionage_concluded
	espionage_operation = yes
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
	}

	option = {
		name = gpm_operation.1.a
		
	}
}

# The Setup
# owner = the operating empire
# from = target
espionage_operation_event = {
	id = gpm_operation.2
	title = gpm_operation.2.name
	desc = gpm_operation.2.desc

	picture = GFX_evt_decryption
	show_sound = event_espionage_concluded
	espionage_operation = yes
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		# Target gets a notification that operating empire is attempting to steal a relic if counter intel is high enough
		from = {
			if = {
				limit = {
					has_intel_level = {
						category = government
						level > 2
						who = owner
					}
				}
				create_message = {
					type = GPM_MESSAGE_STEAL_RELIC_WARNING
					localization = GPM_MESSAGE_STEAL_RELIC_WARNING_DESC
					days = 180
					target = FROM.capital_scope # target capital
					variable = {
						type = name
						localization = COUNTRY
						scope = owner
					}
				}
				log = "create message on target [from.GetName] letting them know [owner.GetName] is attempting to steal relic"
			}
		}
	}

	option = {
		name = gpm_operation.2.a
		
	}
}

# The Heist
# owner = the operating empire
# from = target
espionage_operation_event = {
	id = gpm_operation.3
	title = gpm_operation.3.name
	desc = gpm_operation.3.desc

	picture = GFX_evt_gunrunning
	show_sound = event_espionage_concluded
	espionage_operation = yes
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
	}

	option = {
		name = gpm_operation.3.a
		
	}
}

# The Getaway
# owner = the operating empire
# from = target
espionage_operation_event = {
	id = gpm_operation.4
	title = gpm_operation.4.name
	desc = {
		trigger = {
			target = {
				OR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
		text = gpm_operation.4.desc
	}
	desc = {
		trigger = {
			target = {
				NOR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
		text = gpm_operation.4_NORELICS.desc
	}

	picture = GFX_evt_cargoship_caravan
	show_sound = event_espionage_concluded
	espionage_operation = yes
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		# check to see if the empire still has relics and then continue events
		# TO DO: message event to let player know the relic has already been stolen/taken
		if = {
			limit = {
				target = {
					OR = {
						gpm_has_vanilla_precursor_relic = yes
						gpm_has_modded_precursor_relic = yes
						gpm_has_modded_non_precursor_relic = yes
					}
				}
			}

			# To do: add modifiers to the random events to direct them based on empire types, ethics and intelligence capacity
			owner = {
				random_list = {
					10 = { country_event = { id = gpm_operation.5 } }
					10 = { country_event = { id = gpm_operation.6 } }
					10 = { country_event = { id = gpm_operation.7 } }
				}
			}

			# Other know empires with sufficient intelligence are notified a relic has been stolen
			every_country = {
				limit = {
					is_country_type = default
					NOR = {
						is_country = root.from
						is_country = root.owner
					}
					OR = {
						has_intel_level = {
							category = government
							level >= 2
							who = root.owner
						}
						has_intel_level = {
							category = government
							level >= 2
							who = root.from
						}
					}
				}
				create_message = {
					type = GPM_MESSAGE_STEAL_RELIC_PUBLIC_NOTIFICATION
					localization = GPM_MESSAGE_STEAL_RELIC_PUBLIC_NOTIFICATION_DESC
					days = 180
					target = FROM.capital_scope # target capital
					variable = {
						type = name
						localization = COUNTRY
						scope = owner
					}
				}
				log = ";OP - STEAL; - Message event to all other empires root.from = [root.from.GetName] --- root.owner = [root.owner.GetName]"
			}
		}
		# We set a timed flag so the AI doens't spam relic heist too frequently
		owner = { set_timed_country_flag = { flag = gpm_recent_heist days = 1825 } }
	}

	option = {
		name = gpm_operation.4.a
		trigger = {
			target = {
				OR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
	}

	option = {
		name = UNFORTUNATE
		trigger = {
			target = {
				NOR = {
					gpm_has_vanilla_precursor_relic = yes
					gpm_has_modded_precursor_relic = yes
					gpm_has_modded_non_precursor_relic = yes
				}
			}
		}
	}

	after = {
		set_espionage_operation_progress_locked = no
	}
}

# The Getaway (good) | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.5
	title = gpm_operation.5.name
	desc = gpm_operation.5.desc

	picture = GFX_evt_analyzing_artifacts
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = ";OP - STEAL-GOOD; gpm_operation.5 (The Getaway GOOD) triggered by [from.owner.GetName] on [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.5.a
		locked_random_list = {
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_time_displacerTT
				hidden_effect = { add_relic = gpm_r_time_displacer }
				# set_country_flag = gpm_has_r_time_displacer_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_time_displacer
					remove_country_flag = gpm_has_r_time_displacer_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_time_displacer_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_time_displacer } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_time_displacer"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_dragon_trophyTT
				hidden_effect = { add_relic = r_dragon_trophy }
				# set_country_flag = gpm_has_r_dragon_trophy_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = {
					remove_relic = r_dragon_trophy
					remove_country_flag = gpm_has_r_dragon_trophy_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_dragon_trophy_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_dragon_trophy } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_dragon_trophy"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_khans_throneTT
				hidden_effect = { add_relic = r_khans_throne }
				# set_country_flag = gpm_has_r_khans_throne_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_khans_throne
					remove_country_flag = gpm_has_r_khans_throne_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_khans_throne_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_khans_throne } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_khans_throne"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_worm_scalesTT
				hidden_effect = { add_relic = r_worm_scales }
				# set_country_flag = gpm_has_r_worm_scales_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_worm_scales
					remove_country_flag = gpm_has_r_worm_scales_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_worm_scales_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_worm_scales } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_worm_scales"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_rubricatorTT
				hidden_effect = { add_relic = r_rubricator }
				# set_country_flag = gpm_has_r_rubricator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_rubricator
					remove_country_flag = gpm_has_r_rubricator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_rubricator_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_rubricator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_rubricator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_galaxyTT
				hidden_effect = { add_relic = r_galaxy }
				# set_country_flag = gpm_has_r_galaxy_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_galaxy
					remove_country_flag = gpm_has_r_galaxy_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_galaxy_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_galaxy } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_galaxy"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_omnicodexTT
				hidden_effect = { add_relic = r_omnicodex }
				# set_country_flag = gpm_has_r_omnicodex_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_omnicodex
					remove_country_flag = gpm_has_r_omnicodex_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_omnicodex_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_omnicodex } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_omnicodex"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_surveyorTT
				hidden_effect = { add_relic = r_surveyor }
				# set_country_flag = gpm_has_r_surveyor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_surveyor
					remove_country_flag = gpm_has_r_surveyor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_surveyor_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_surveyor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_surveyor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_galatronTT
				hidden_effect = { add_relic = r_galatron }
				# set_country_flag = gpm_has_r_galatron_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_galatron
					remove_country_flag = gpm_has_r_galatron_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_galatron_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_galatron } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_galatron"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_ancient_swordTT
				hidden_effect = { add_relic = r_ancient_sword }
				# set_country_flag = gpm_has_r_ancient_sword_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_ancient_sword
					remove_country_flag = gpm_has_r_ancient_sword_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_ancient_sword_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_ancient_sword } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_ancient_sword"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_severed_headTT
				hidden_effect = { add_relic = r_severed_head }
				# set_country_flag = gpm_has_r_severed_head_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_severed_head
					remove_country_flag = gpm_has_r_severed_head_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_severed_head_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_severed_head } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_severed_head"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_prethoryn_queenTT
				hidden_effect = { add_relic = r_prethoryn_queen }
				# set_country_flag = gpm_has_r_prethoryn_queen_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_prethoryn_queen
					remove_country_flag = gpm_has_r_prethoryn_queen_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_prethoryn_queen_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_prethoryn_queen } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_prethoryn_queen"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_unbidden_warlockTT
				hidden_effect = { add_relic = r_unbidden_warlock }
				# set_country_flag = gpm_has_r_unbidden_warlock_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_unbidden_warlock
					remove_country_flag = gpm_has_r_unbidden_warlock_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_unbidden_warlock_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_unbidden_warlock } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_unbidden_warlock"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_contingency_coreTT
				hidden_effect = { add_relic = r_contingency_core }
				# set_country_flag = gpm_has_r_contingency_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_contingency_core
					remove_country_flag = gpm_has_r_contingency_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_contingency_core_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_contingency_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_contingency_core"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_zro_crystalTT
				hidden_effect = { add_relic = r_zro_crystal }
				# set_country_flag = gpm_has_r_zro_crystal_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_zro_crystal
					remove_country_flag = gpm_has_r_zro_crystal_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_zro_crystal_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_zro_crystal } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_zro_crystal"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_the_last_baolTT
				hidden_effect = { add_relic = r_the_last_baol }
				# set_country_flag = gpm_has_r_the_last_baol_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_the_last_baol
					remove_country_flag = gpm_has_r_the_last_baol_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_the_last_baol_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_the_last_baol } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_the_last_baol"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_the_defragmentorTT
				hidden_effect = { add_relic = r_the_defragmentor }
				# set_country_flag = gpm_has_r_the_defragmentor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_the_defragmentor
					remove_country_flag = gpm_has_r_the_defragmentor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_the_defragmentor_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_the_defragmentor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_the_defragmentor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_reality_perforatorTT
				hidden_effect = { add_relic = r_reality_perforator }
				# set_country_flag = gpm_has_r_reality_perforator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_reality_perforator
					remove_country_flag = gpm_has_r_reality_perforator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_reality_perforator_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_reality_perforator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_reality_perforator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_pox_sampleTT
				hidden_effect = { add_relic = r_pox_sample }
				# set_country_flag = gpm_has_r_pox_sample_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_pox_sample
					remove_country_flag = gpm_has_r_pox_sample_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_pox_sample_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_pox_sample } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_pox_sample"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_cryo_coreTT
				hidden_effect = { add_relic = r_cryo_core }
				# set_country_flag = gpm_has_r_cryo_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_cryo_core
					remove_country_flag = gpm_has_r_cryo_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_cryo_core_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_cryo_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_cryo_core"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_war_forgeTT
				hidden_effect = { add_relic = r_war_forge }
				# set_country_flag = gpm_has_r_war_forge_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_war_forge
					remove_country_flag = gpm_has_r_war_forge_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_war_forge_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_war_forge } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_war_forge"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_ai_architectTT
				hidden_effect = { add_relic = gpm_r_ai_architect }
				# set_country_flag = gpm_has_r_ai_architect_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_ai_architect
					remove_country_flag = gpm_has_r_ai_architect_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_ai_architect_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_ai_architect } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_ai_architect"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_banner_of_the_fallenTT
				hidden_effect = { add_relic = gpm_r_banner_of_the_fallen }
				# set_country_flag = gpm_has_r_banner_of_the_fallen_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_banner_of_the_fallen
					remove_country_flag = gpm_has_r_banner_of_the_fallen_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_banner_of_the_fallen_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_banner_of_the_fallen } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_banner_of_the_fallen"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_cloaking_deviceTT
				hidden_effect = { add_relic = gpm_r_cloaking_device }
				# set_country_flag = gpm_has_r_cloaking_device_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_cloaking_device
					remove_country_flag = gpm_has_r_cloaking_device_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_cloaking_device_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_cloaking_device } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_cloaking_device"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_codex_administratumTT
				hidden_effect = { add_relic = gpm_r_codex_administratum }
				# set_country_flag = gpm_has_r_codex_administratum_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_codex_administratum
					remove_country_flag = gpm_has_r_codex_administratum_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_codex_administratum_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_codex_administratum } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_codex_administratum"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_datacubeTT
				hidden_effect = { add_relic = gpm_r_datacube }
				# set_country_flag = gpm_has_r_datacube_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_datacube
					remove_country_flag = gpm_has_r_datacube_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_datacube_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_datacube } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_datacube"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_earthquake_engineTT
				hidden_effect = { add_relic = gpm_r_earthquake_engine }
				# set_country_flag = gpm_has_r_earthquake_engine_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_earthquake_engine
					remove_country_flag = gpm_has_r_earthquake_engine_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_earthquake_engine_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_earthquake_engine } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_earthquake_engine"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_encrypted_sctTT
				hidden_effect = { add_relic = gpm_r_encrypted_sct }
				# set_country_flag = gpm_has_r_encrypted_sct_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_encrypted_sct
					remove_country_flag = gpm_has_r_encrypted_sct_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_encrypted_sct_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_encrypted_sct } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_encrypted_sct"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_encyclopedia_galacticaTT
				hidden_effect = { add_relic = gpm_r_encyclopedia_galactica }
				# set_country_flag = gpm_has_r_encyclopedia_galactica_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_encyclopedia_galactica
					remove_country_flag = gpm_has_r_encyclopedia_galactica_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_encyclopedia_galactica_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_encyclopedia_galactica } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_encyclopedia_galactica"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_enigmatic_advisorTT
				hidden_effect = { add_relic = gpm_r_enigmatic_advisor }
				# set_country_flag = gpm_has_r_enigmatic_advisor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_enigmatic_advisor
					remove_country_flag = gpm_has_r_enigmatic_advisor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_enigmatic_advisor_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_enigmatic_advisor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_enigmatic_advisor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_experimental_weaponTT
				hidden_effect = { add_relic = gpm_r_experimental_weapon }
				# set_country_flag = gpm_has_r_experimental_weapon_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_experimental_weapon
					remove_country_flag = gpm_has_r_experimental_weapon_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_experimental_weapon_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_experimental_weapon } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_experimental_weapon"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_fallout_emergency_replicatorTT
				hidden_effect = { add_relic = gpm_r_fallout_emergency_replicator }
				# set_country_flag = gpm_has_r_fallout_emergency_replicator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_fallout_emergency_replicator
					remove_country_flag = gpm_has_r_fallout_emergency_replicator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_fallout_emergency_replicator_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_fallout_emergency_replicator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_fallout_emergency_replicator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_gravity_engineTT
				hidden_effect = { add_relic = gpm_r_gravity_engine }
				# set_country_flag = gpm_has_r_gravity_engine_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_gravity_engine
					remove_country_flag = gpm_has_r_gravity_engine_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_gravity_engine_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_gravity_engine } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_gravity_engine"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_manufactorium_shipTT
				hidden_effect = { add_relic = gpm_r_manufactorium_ship }
				# set_country_flag = gpm_has_r_manufactorium_ship_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_manufactorium_ship
					remove_country_flag = gpm_has_r_manufactorium_ship_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_manufactorium_ship_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_manufactorium_ship } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_manufactorium_ship"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_mysterious_shield_generatorTT
				hidden_effect = { add_relic = gpm_r_mysterious_shield_generator }
				# set_country_flag = gpm_has_r_mysterious_shield_generator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_mysterious_shield_generator
					remove_country_flag = gpm_has_r_mysterious_shield_generator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_mysterious_shield_generator_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_mysterious_shield_generator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_mysterious_shield_generator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_positronic_microchipTT
				hidden_effect = { add_relic = gpm_r_positronic_microchip }
				# set_country_flag = gpm_has_r_positronic_microchip_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_positronic_microchip
					remove_country_flag = gpm_has_r_positronic_microchip_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_positronic_microchip_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_positronic_microchip } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_positronic_microchip"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_power_coreTT
				hidden_effect = { add_relic = gpm_r_power_core }
				# set_country_flag = gpm_has_r_power_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_power_core
					remove_country_flag = gpm_has_r_power_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_power_core_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_power_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_power_core"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_q_storage_compressorTT
				hidden_effect = { add_relic = gpm_r_q_storage_compressor }
				# set_country_flag = gpm_has_r_q_storage_compressor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_q_storage_compressor
					remove_country_flag = gpm_has_r_q_storage_compressor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_q_storage_compressor_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_q_storage_compressor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_q_storage_compressor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_quantum_sphereTT
				hidden_effect = { add_relic = gpm_r_quantum_sphere }
				# set_country_flag = gpm_has_r_quantum_sphere_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_quantum_sphere
					remove_country_flag = gpm_has_r_quantum_sphere_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_quantum_sphere_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_quantum_sphere } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_quantum_sphere"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_self_assembly_hubTT
				hidden_effect = { add_relic = gpm_r_self_assembly_hub }
				# set_country_flag = gpm_has_r_self_assembly_hub_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_self_assembly_hub
					remove_country_flag = gpm_has_r_self_assembly_hub_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_self_assembly_hub_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_self_assembly_hub } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_self_assembly_hub"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_self_repairing_obeliskTT
				hidden_effect = { add_relic = gpm_r_self_repairing_obelisk }
				# set_country_flag = gpm_has_r_self_repairing_obelisk_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_self_repairing_obelisk
					remove_country_flag = gpm_has_r_self_repairing_obelisk_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_self_repairing_obelisk_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_self_repairing_obelisk } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_self_repairing_obelisk"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_sentinel_queenTT
				hidden_effect = { add_relic = gpm_r_sentinel_queen }
				# set_country_flag = gpm_has_r_sentinel_queen_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_sentinel_queen
					remove_country_flag = gpm_has_r_sentinel_queen_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_sentinel_queen_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_sentinel_queen } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_sentinel_queen"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_soul_gemTT
				hidden_effect = { add_relic = gpm_r_soul_gem }
				# set_country_flag = gpm_has_r_soul_gem_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_soul_gem
					remove_country_flag = gpm_has_r_soul_gem_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_soul_gem_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_soul_gem } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_soul_gem"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_venerable_dreadnaughtTT
				hidden_effect = { add_relic = gpm_r_venerable_dreadnaught }
				# set_country_flag = gpm_has_r_venerable_dreadnaught_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_venerable_dreadnaught
					remove_country_flag = gpm_has_r_venerable_dreadnaught_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_venerable_dreadnaught_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_venerable_dreadnaught } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_venerable_dreadnaught"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_zero_energy_generatorTT
				hidden_effect = { add_relic = gpm_r_zero_energy_generator }
				# set_country_flag = gpm_has_r_zero_energy_generator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_zero_energy_generator
					remove_country_flag = gpm_has_r_zero_energy_generator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_zero_energy_generator_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_zero_energy_generator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_zero_energy_generator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_alien_eggsTT
				hidden_effect = { add_relic = gpm_r_alien_eggs }
				# set_country_flag = gpm_has_r_alien_eggs_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_alien_eggs
					remove_country_flag = gpm_has_r_alien_eggs_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_alien_eggs_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_alien_eggs } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_alien_eggs"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_machine_world_coreTT
				hidden_effect = { add_relic = gpm_r_machine_world_core }
				# set_country_flag = gpm_has_r_machine_world_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = {
					remove_relic = gpm_r_machine_world_core
					remove_country_flag = gpm_has_r_machine_world_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_machine_world_core_relic_stolen
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_machine_world_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_machine_world_core"
			}
		}
		# Target Empire gets a notifaction message because I'm nice like that
		hidden_effect = {
			fromfrom = {
				country_event = { id = gpm_operation.80 }
			}
		}
	}

	after = {
		destroy_espionage_operation = from
	}
}

# The Getaway (Enraged) | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.6
	title = gpm_operation.6.name
	desc = gpm_operation.6.desc
	picture = GFX_evt_laser_grid
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = ";OP - STEAL-ENRGD; gpm_operation.6 (The Getaway ENRAGED) triggered by [from.owner.GetName] on [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.6.a
		locked_random_list = {
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_time_displacerTT
				hidden_effect = { add_relic = gpm_r_time_displacer }
				set_country_flag = gpm_has_r_time_displacer_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_time_displacer
					remove_country_flag = gpm_has_r_time_displacer_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_time_displacer_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_time_displacer } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_time_displacer"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_dragon_trophyTT
				hidden_effect = { add_relic = r_dragon_trophy }
				set_country_flag = gpm_has_r_dragon_trophy_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_dragon_trophy
					remove_country_flag = gpm_has_r_dragon_trophy_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_dragon_trophy_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_dragon_trophy } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_dragon_trophy"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_khans_throneTT
				hidden_effect = { add_relic = r_khans_throne }
				set_country_flag = gpm_has_r_khans_throne_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_khans_throne
					remove_country_flag = gpm_has_r_khans_throne_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_khans_throne_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_khans_throne } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_khans_throne"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_worm_scalesTT
				hidden_effect = { add_relic = r_worm_scales }
				set_country_flag = gpm_has_r_worm_scales_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_worm_scales
					remove_country_flag = gpm_has_r_worm_scales_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_worm_scales_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_worm_scales } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_worm_scales"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_rubricatorTT
				hidden_effect = { add_relic = r_rubricator }
				set_country_flag = gpm_has_r_rubricator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_rubricator
					remove_country_flag = gpm_has_r_rubricator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_rubricator_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_rubricator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_rubricator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_galaxyTT
				hidden_effect = { add_relic = r_galaxy }
				set_country_flag = gpm_has_r_galaxy_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_galaxy
					remove_country_flag = gpm_has_r_galaxy_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_galaxy_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_galaxy } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_galaxy"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_omnicodexTT
				hidden_effect = { add_relic = r_omnicodex }
				set_country_flag = gpm_has_r_omnicodex_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_omnicodex
					remove_country_flag = gpm_has_r_omnicodex_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_omnicodex_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_omnicodex } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_omnicodex"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_surveyorTT
				hidden_effect = { add_relic = r_surveyor }
				set_country_flag = gpm_has_r_surveyor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_surveyor
					remove_country_flag = gpm_has_r_surveyor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_surveyor_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_surveyor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_surveyor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_galatronTT
				hidden_effect = { add_relic = r_galatron }
				set_country_flag = gpm_has_r_galatron_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_galatron
					remove_country_flag = gpm_has_r_galatron_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_galatron_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_galatron } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_galatron"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_ancient_swordTT
				hidden_effect = { add_relic = r_ancient_sword }
				set_country_flag = gpm_has_r_ancient_sword_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_ancient_sword
					remove_country_flag = gpm_has_r_ancient_sword_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_ancient_sword_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_ancient_sword } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_ancient_sword"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_severed_headTT
				hidden_effect = { add_relic = r_severed_head }
				set_country_flag = gpm_has_r_severed_head_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_severed_head
					remove_country_flag = gpm_has_r_severed_head_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_severed_head_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_severed_head } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_severed_head"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_prethoryn_queenTT
				hidden_effect = { add_relic = r_prethoryn_queen }
				set_country_flag = gpm_has_r_prethoryn_queen_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_prethoryn_queen
					remove_country_flag = gpm_has_r_prethoryn_queen_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_prethoryn_queen_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_prethoryn_queen } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_prethoryn_queen"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_unbidden_warlockTT
				hidden_effect = { add_relic = r_unbidden_warlock }
				set_country_flag = gpm_has_r_unbidden_warlock_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_unbidden_warlock
					remove_country_flag = gpm_has_r_unbidden_warlock_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_unbidden_warlock_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_unbidden_warlock } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_unbidden_warlock"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_contingency_coreTT
				hidden_effect = { add_relic = r_contingency_core }
				set_country_flag = gpm_has_r_contingency_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_contingency_core
					remove_country_flag = gpm_has_r_contingency_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_contingency_core_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_contingency_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_contingency_core"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_zro_crystalTT
				hidden_effect = { add_relic = r_zro_crystal }
				set_country_flag = gpm_has_r_zro_crystal_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_zro_crystal
					remove_country_flag = gpm_has_r_zro_crystal_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_zro_crystal_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_zro_crystal } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_zro_crystal"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_the_last_baolTT
				hidden_effect = { add_relic = r_the_last_baol }
				set_country_flag = gpm_has_r_the_last_baol_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_the_last_baol
					remove_country_flag = gpm_has_r_the_last_baol_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_the_last_baol_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_the_last_baol } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_the_last_baol"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_the_defragmentorTT
				hidden_effect = { add_relic = r_the_defragmentor }
				set_country_flag = gpm_has_r_the_defragmentor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_the_defragmentor
					remove_country_flag = gpm_has_r_the_defragmentor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_the_defragmentor_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_the_defragmentor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_the_defragmentor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_reality_perforatorTT
				hidden_effect = { add_relic = r_reality_perforator }
				set_country_flag = gpm_has_r_reality_perforator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_reality_perforator
					remove_country_flag = gpm_has_r_reality_perforator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_reality_perforator_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_reality_perforator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_reality_perforator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_pox_sampleTT
				hidden_effect = { add_relic = r_pox_sample }
				set_country_flag = gpm_has_r_pox_sample_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_pox_sample
					remove_country_flag = gpm_has_r_pox_sample_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_pox_sample_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_pox_sample } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_pox_sample"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_cryo_coreTT
				hidden_effect = { add_relic = r_cryo_core }
				set_country_flag = gpm_has_r_cryo_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_cryo_core
					remove_country_flag = gpm_has_r_cryo_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_cryo_core_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_cryo_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_cryo_core"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_war_forgeTT
				hidden_effect = { add_relic = r_war_forge }
				set_country_flag = gpm_has_r_war_forge_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_war_forge
					remove_country_flag = gpm_has_r_war_forge_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_war_forge_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_war_forge } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_war_forge"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_ai_architectTT
				hidden_effect = { add_relic = gpm_r_ai_architect }
				set_country_flag = gpm_has_r_ai_architect_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_ai_architect
					remove_country_flag = gpm_has_r_ai_architect_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_ai_architect_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_ai_architect } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_ai_architect"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_banner_of_the_fallenTT
				hidden_effect = { add_relic = gpm_r_banner_of_the_fallen }
				set_country_flag = gpm_has_r_banner_of_the_fallen_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_banner_of_the_fallen
					remove_country_flag = gpm_has_r_banner_of_the_fallen_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_banner_of_the_fallen_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_banner_of_the_fallen } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_banner_of_the_fallen"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_cloaking_deviceTT
				hidden_effect = { add_relic = gpm_r_cloaking_device }
				set_country_flag = gpm_has_r_cloaking_device_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_cloaking_device
					remove_country_flag = gpm_has_r_cloaking_device_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_r_cloaking_device_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_cloaking_device } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_cloaking_device"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_codex_administratumTT
				hidden_effect = { add_relic = gpm_r_codex_administratum }
				set_country_flag = gpm_has_r_codex_administratum_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_codex_administratum
					remove_country_flag = gpm_has_r_codex_administratum_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_codex_administratum_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_codex_administratum } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_codex_administratum"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_datacubeTT
				hidden_effect = { add_relic = gpm_r_datacube }
				set_country_flag = gpm_has_r_datacube_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_datacube
					remove_country_flag = gpm_has_r_datacube_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_datacube_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_datacube } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_datacube"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_earthquake_engineTT
				hidden_effect = { add_relic = gpm_r_earthquake_engine }
				set_country_flag = gpm_has_r_earthquake_engine_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_earthquake_engine
					remove_country_flag = gpm_has_r_earthquake_engine_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_earthquake_engine_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_earthquake_engine } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_earthquake_engine"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_encrypted_sctTT
				hidden_effect = { add_relic = gpm_r_encrypted_sct }
				set_country_flag = gpm_has_r_encrypted_sct_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_encrypted_sct
					remove_country_flag = gpm_has_r_encrypted_sct_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_encrypted_sct_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_encrypted_sct } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_encrypted_sct"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_encyclopedia_galacticaTT
				hidden_effect = { add_relic = gpm_r_encyclopedia_galactica }
				set_country_flag = gpm_has_r_encyclopedia_galactica_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_encyclopedia_galactica
					remove_country_flag = gpm_has_r_encyclopedia_galactica_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_encyclopedia_galactica_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_encyclopedia_galactica } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_encyclopedia_galactica"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_enigmatic_advisorTT
				hidden_effect = { add_relic = gpm_r_enigmatic_advisor }
				set_country_flag = gpm_has_r_enigmatic_advisor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_enigmatic_advisor
					remove_country_flag = gpm_has_r_enigmatic_advisor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_enigmatic_advisor_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_enigmatic_advisor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_enigmatic_advisor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_experimental_weaponTT
				hidden_effect = { add_relic = gpm_r_experimental_weapon }
				set_country_flag = gpm_has_r_experimental_weapon_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_experimental_weapon
					remove_country_flag = gpm_has_r_experimental_weapon_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_experimental_weapon_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_experimental_weapon } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_experimental_weapon"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_fallout_emergency_replicatorTT
				hidden_effect = { add_relic = gpm_r_fallout_emergency_replicator }
				set_country_flag = gpm_has_r_fallout_emergency_replicator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_fallout_emergency_replicator
					remove_country_flag = gpm_has_r_fallout_emergency_replicator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_fallout_emergency_replicator_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_fallout_emergency_replicator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_fallout_emergency_replicator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_gravity_engineTT
				hidden_effect = { add_relic = gpm_r_gravity_engine }
				set_country_flag = gpm_has_r_gravity_engine_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_gravity_engine
					remove_country_flag = gpm_has_r_gravity_engine_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_gravity_engine_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_gravity_engine } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_gravity_engine"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_manufactorium_shipTT
				hidden_effect = { add_relic = gpm_r_manufactorium_ship }
				set_country_flag = gpm_has_r_manufactorium_ship_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_manufactorium_ship
					remove_country_flag = gpm_has_r_manufactorium_ship_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_manufactorium_ship_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_manufactorium_ship } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_manufactorium_ship"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_mysterious_shield_generatorTT
				hidden_effect = { add_relic = gpm_r_mysterious_shield_generator }
				set_country_flag = gpm_has_r_mysterious_shield_generator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_mysterious_shield_generator
					remove_country_flag = gpm_has_r_mysterious_shield_generator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_mysterious_shield_generator_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_mysterious_shield_generator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_mysterious_shield_generator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_positronic_microchipTT
				hidden_effect = { add_relic = gpm_r_positronic_microchip }
				set_country_flag = gpm_has_r_positronic_microchip_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_positronic_microchip
					remove_country_flag = gpm_has_r_positronic_microchip_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_positronic_microchip_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_positronic_microchip } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_positronic_microchip"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_power_coreTT
				hidden_effect = { add_relic = gpm_r_power_core }
				set_country_flag = gpm_has_r_power_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_power_core
					remove_country_flag = gpm_has_r_power_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_power_core_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_power_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_power_core"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_q_storage_compressorTT
				hidden_effect = { add_relic = gpm_r_q_storage_compressor }
				set_country_flag = gpm_has_r_q_storage_compressor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_q_storage_compressor
					remove_country_flag = gpm_has_r_q_storage_compressor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_q_storage_compressor_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_q_storage_compressor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_q_storage_compressor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_quantum_sphereTT
				hidden_effect = { add_relic = gpm_r_quantum_sphere }
				set_country_flag = gpm_has_r_quantum_sphere_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_quantum_sphere
					remove_country_flag = gpm_has_r_quantum_sphere_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_quantum_sphere_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_quantum_sphere } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_quantum_sphere"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_self_assembly_hubTT
				hidden_effect = { add_relic = gpm_r_self_assembly_hub }
				set_country_flag = gpm_has_r_self_assembly_hub_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_self_assembly_hub
					remove_country_flag = gpm_has_r_self_assembly_hub_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_self_assembly_hub_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_self_assembly_hub } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_self_assembly_hub"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_self_repairing_obeliskTT
				hidden_effect = { add_relic = gpm_r_self_repairing_obelisk }
				set_country_flag = gpm_has_r_self_repairing_obelisk_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_self_repairing_obelisk
					remove_country_flag = gpm_has_r_self_repairing_obelisk_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_self_repairing_obelisk_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_self_repairing_obelisk } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_self_repairing_obelisk"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_sentinel_queenTT
				hidden_effect = { add_relic = gpm_r_sentinel_queen }
				set_country_flag = gpm_has_r_sentinel_queen_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_sentinel_queen
					remove_country_flag = gpm_has_r_sentinel_queen_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_sentinel_queen_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_sentinel_queen } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_sentinel_queen"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_soul_gemTT
				hidden_effect = { add_relic = gpm_r_soul_gem }
				set_country_flag = gpm_has_r_soul_gem_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_soul_gem
					remove_country_flag = gpm_has_r_soul_gem_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_soul_gem_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_soul_gem } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_soul_gem"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_venerable_dreadnaughtTT
				hidden_effect = { add_relic = gpm_r_venerable_dreadnaught }
				set_country_flag = gpm_has_r_venerable_dreadnaught_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_venerable_dreadnaught
					remove_country_flag = gpm_has_r_venerable_dreadnaught_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_venerable_dreadnaught_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_venerable_dreadnaught } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_venerable_dreadnaught"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_zero_energy_generatorTT
				hidden_effect = { add_relic = gpm_r_zero_energy_generator }
				set_country_flag = gpm_has_r_zero_energy_generator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_zero_energy_generator
					remove_country_flag = gpm_has_r_zero_energy_generator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_zero_energy_generator_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_zero_energy_generator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_zero_energy_generator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_alien_eggsTT
				hidden_effect = { add_relic = gpm_r_alien_eggs }
				set_country_flag = gpm_has_r_alien_eggs_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_alien_eggs
					remove_country_flag = gpm_has_r_alien_eggs_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_alien_eggs_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_alien_eggs } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_alien_eggs"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_machine_world_coreTT
				hidden_effect = { add_relic = gpm_r_machine_world_core }
				set_country_flag = gpm_has_r_machine_world_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_machine_world_core
					remove_country_flag = gpm_has_r_machine_world_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_machine_world_core_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_machine_world_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_machine_world_core"
			}
		}
		# Target Empire gets a notifaction message because I'm nice like that
		hidden_effect = {
			fromfrom = {
				country_event = { id = gpm_operation.81 }
			}
		}
	}

	after = {
		destroy_espionage_operation = from
	}
}

# The Getaway (Allies) | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.7
	title = gpm_operation.7.name
	desc = gpm_operation.7.desc
	picture = GFX_evt_archaeologists_escaping
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = ";OP - STEAL-ALLIES; gpm_operation.7 (The Getaway ALLIES) triggered by [from.owner.GetName] on [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.7.a
		locked_random_list = {
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_time_displacerTT
				hidden_effect = { add_relic = gpm_r_time_displacer }
				set_country_flag = gpm_has_r_time_displacer_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = {
					remove_relic = gpm_r_time_displacer
					remove_country_flag = gpm_has_r_time_displacer_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_time_displacer_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_time_displacer } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_time_displacer"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_dragon_trophyTT
				hidden_effect = { add_relic = r_dragon_trophy }
				set_country_flag = gpm_has_r_dragon_trophy_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_dragon_trophy
					remove_country_flag = gpm_has_r_dragon_trophy_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_dragon_trophy_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_dragon_trophy } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_dragon_trophy"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_khans_throneTT
				hidden_effect = { add_relic = r_khans_throne }
				set_country_flag = gpm_has_r_khans_throne_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_khans_throne
					remove_country_flag = gpm_has_r_khans_throne_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_khans_throne_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_khans_throne } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_khans_throne"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_worm_scalesTT
				hidden_effect = { add_relic = r_worm_scales }
				set_country_flag = gpm_has_r_worm_scales_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_worm_scales
					remove_country_flag = gpm_has_r_worm_scales_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_worm_scales_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_worm_scales } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_worm_scales"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_rubricatorTT
				hidden_effect = { add_relic = r_rubricator }
				set_country_flag = gpm_has_r_rubricator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_rubricator
					remove_country_flag = gpm_has_r_rubricator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_rubricator_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_rubricator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_rubricator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_galaxyTT
				hidden_effect = { add_relic = r_galaxy }
				set_country_flag = gpm_has_r_galaxy_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_galaxy
					remove_country_flag = gpm_has_r_galaxy_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_galaxy_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_galaxy } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_galaxy"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_omnicodexTT
				hidden_effect = { add_relic = r_omnicodex }
				set_country_flag = gpm_has_r_omnicodex_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_omnicodex
					remove_country_flag = gpm_has_r_omnicodex_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_omnicodex_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_omnicodex } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_omnicodex"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_surveyorTT
				hidden_effect = { add_relic = r_surveyor }
				set_country_flag = gpm_has_r_surveyor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_surveyor
					remove_country_flag = gpm_has_r_surveyor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_surveyor_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_surveyor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_surveyor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_galatronTT
				hidden_effect = { add_relic = r_galatron }
				set_country_flag = gpm_has_r_galatron_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_galatron
					remove_country_flag = gpm_has_r_galatron_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_galatron_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_galatron } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_galatron"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_ancient_swordTT
				hidden_effect = { add_relic = r_ancient_sword }
				set_country_flag = gpm_has_r_ancient_sword_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_ancient_sword
					remove_country_flag = gpm_has_r_ancient_sword_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_ancient_sword_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_ancient_sword } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_ancient_sword"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_severed_headTT
				hidden_effect = { add_relic = r_severed_head }
				set_country_flag = gpm_has_r_severed_head_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_severed_head
					remove_country_flag = gpm_has_r_severed_head_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_severed_head_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_severed_head } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_severed_head"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_prethoryn_queenTT
				hidden_effect = { add_relic = r_prethoryn_queen }
				set_country_flag = gpm_has_r_prethoryn_queen_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_prethoryn_queen
					remove_country_flag = gpm_has_r_prethoryn_queen_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_prethoryn_queen_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_prethoryn_queen } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_prethoryn_queen"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_unbidden_warlockTT
				hidden_effect = { add_relic = r_unbidden_warlock }
				set_country_flag = gpm_has_r_unbidden_warlock_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_unbidden_warlock
					remove_country_flag = gpm_has_r_unbidden_warlock_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_unbidden_warlock_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_unbidden_warlock } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_unbidden_warlock"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_contingency_coreTT
				hidden_effect = { add_relic = r_contingency_core }
				set_country_flag = gpm_has_r_contingency_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_contingency_core
					remove_country_flag = gpm_has_r_contingency_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_contingency_core_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_contingency_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_contingency_core"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_zro_crystalTT
				hidden_effect = { add_relic = r_zro_crystal }
				set_country_flag = gpm_has_r_zro_crystal_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_zro_crystal
					remove_country_flag = gpm_has_r_zro_crystal_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_zro_crystal_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_zro_crystal } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_zro_crystal"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_the_last_baolTT
				hidden_effect = { add_relic = r_the_last_baol }
				set_country_flag = gpm_has_r_the_last_baol_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_the_last_baol
					remove_country_flag = gpm_has_r_the_last_baol_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_the_last_baol_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_the_last_baol } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_the_last_baol"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_the_defragmentorTT
				hidden_effect = { add_relic = r_the_defragmentor }
				set_country_flag = gpm_has_r_the_defragmentor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_the_defragmentor
					remove_country_flag = gpm_has_r_the_defragmentor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_the_defragmentor_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_the_defragmentor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_the_defragmentor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_reality_perforatorTT
				hidden_effect = { add_relic = r_reality_perforator }
				set_country_flag = gpm_has_r_reality_perforator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_reality_perforator
					remove_country_flag = gpm_has_r_reality_perforator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_reality_perforator_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_reality_perforator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_reality_perforator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_pox_sampleTT
				hidden_effect = { add_relic = r_pox_sample }
				set_country_flag = gpm_has_r_pox_sample_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_pox_sample
					remove_country_flag = gpm_has_r_pox_sample_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_pox_sample_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_pox_sample } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_pox_sample"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_cryo_coreTT
				hidden_effect = { add_relic = r_cryo_core }
				set_country_flag = gpm_has_r_cryo_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_cryo_core
					remove_country_flag = gpm_has_r_cryo_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_cryo_core_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_cryo_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_cryo_core"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_r_war_forgeTT
				hidden_effect = { add_relic = r_war_forge }
				set_country_flag = gpm_has_r_war_forge_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = r_war_forge
					remove_country_flag = gpm_has_r_war_forge_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_war_forge_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_war_forge } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: r_war_forge"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_ai_architectTT
				hidden_effect = { add_relic = gpm_r_ai_architect }
				set_country_flag = gpm_has_r_ai_architect_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_ai_architect
					remove_country_flag = gpm_has_r_ai_architect_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_ai_architect_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_ai_architect } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_ai_architect"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_banner_of_the_fallenTT
				hidden_effect = { add_relic = gpm_r_banner_of_the_fallen }
				set_country_flag = gpm_has_r_banner_of_the_fallen_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_banner_of_the_fallen
					remove_country_flag = gpm_has_r_banner_of_the_fallen_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_banner_of_the_fallen_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_banner_of_the_fallen } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_banner_of_the_fallen"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_cloaking_deviceTT
				hidden_effect = { add_relic = gpm_r_cloaking_device }
				set_country_flag = gpm_has_r_cloaking_device_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_cloaking_device
					remove_country_flag = gpm_has_r_cloaking_device_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_cloaking_device_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_cloaking_device } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_cloaking_device"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_codex_administratumTT
				hidden_effect = { add_relic = gpm_r_codex_administratum }
				set_country_flag = gpm_has_r_codex_administratum_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_codex_administratum
					remove_country_flag = gpm_has_r_codex_administratum_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_codex_administratum_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_codex_administratum } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_codex_administratum"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_datacubeTT
				hidden_effect = { add_relic = gpm_r_datacube }
				set_country_flag = gpm_has_r_datacube_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_datacube
					remove_country_flag = gpm_has_r_datacube_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_datacube_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_datacube } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_datacube"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_earthquake_engineTT
				hidden_effect = { add_relic = gpm_r_earthquake_engine }
				set_country_flag = gpm_has_r_earthquake_engine_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_earthquake_engine
					remove_country_flag = gpm_has_r_earthquake_engine_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_earthquake_engine_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_earthquake_engine } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_earthquake_engine"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_encrypted_sctTT
				hidden_effect = { add_relic = gpm_r_encrypted_sct }
				set_country_flag = gpm_has_r_encrypted_sct_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_encrypted_sct
					remove_country_flag = gpm_has_r_encrypted_sct_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_encrypted_sct_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_encrypted_sct } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_encrypted_sct"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_encyclopedia_galacticaTT
				hidden_effect = { add_relic = gpm_r_encyclopedia_galactica }
				set_country_flag = gpm_has_r_encyclopedia_galactica_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_encyclopedia_galactica
					remove_country_flag = gpm_has_r_encyclopedia_galactica_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_encyclopedia_galactica_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_encyclopedia_galactica } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_encyclopedia_galactica"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_enigmatic_advisorTT
				hidden_effect = { add_relic = gpm_r_enigmatic_advisor }
				set_country_flag = gpm_has_r_enigmatic_advisor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_enigmatic_advisor
					remove_country_flag = gpm_has_r_enigmatic_advisor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_enigmatic_advisor_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_enigmatic_advisor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_enigmatic_advisor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_experimental_weaponTT
				hidden_effect = { add_relic = gpm_r_experimental_weapon }
				set_country_flag = gpm_has_r_experimental_weapon_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_experimental_weapon
					remove_country_flag = gpm_has_r_experimental_weapon_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_experimental_weapon_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_experimental_weapon } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_experimental_weapon"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_fallout_emergency_replicatorTT
				hidden_effect = { add_relic = gpm_r_fallout_emergency_replicator }
				set_country_flag = gpm_has_r_fallout_emergency_replicator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_fallout_emergency_replicator
					remove_country_flag = gpm_has_r_fallout_emergency_replicator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_fallout_emergency_replicator_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_fallout_emergency_replicator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_fallout_emergency_replicator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_gravity_engineTT
				hidden_effect = { add_relic = gpm_r_gravity_engine }
				set_country_flag = gpm_has_r_gravity_engine_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_gravity_engine
					remove_country_flag = gpm_has_r_gravity_engine_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_gravity_engine_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_gravity_engine } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_gravity_engine"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_manufactorium_shipTT
				hidden_effect = { add_relic = gpm_r_manufactorium_ship }
				set_country_flag = gpm_has_r_manufactorium_ship_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_manufactorium_ship
					remove_country_flag = gpm_has_r_manufactorium_ship_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_manufactorium_ship_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_manufactorium_ship } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_manufactorium_ship"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_mysterious_shield_generatorTT
				hidden_effect = { add_relic = gpm_r_mysterious_shield_generator }
				set_country_flag = gpm_has_r_mysterious_shield_generator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_mysterious_shield_generator
					remove_country_flag = gpm_has_r_mysterious_shield_generator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_mysterious_shield_generator_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_mysterious_shield_generator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_mysterious_shield_generator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_positronic_microchipTT
				hidden_effect = { add_relic = gpm_r_positronic_microchip }
				set_country_flag = gpm_has_r_positronic_microchip_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_positronic_microchip
					remove_country_flag = gpm_has_r_positronic_microchip_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_positronic_microchip_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_positronic_microchip } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_positronic_microchip"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_power_coreTT
				hidden_effect = { add_relic = gpm_r_power_core }
				set_country_flag = gpm_has_r_power_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_power_core
					remove_country_flag = gpm_has_r_power_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_power_core_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_power_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_power_core"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_q_storage_compressorTT
				hidden_effect = { add_relic = gpm_r_q_storage_compressor }
				set_country_flag = gpm_has_r_q_storage_compressor_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_q_storage_compressor
					remove_country_flag = gpm_has_r_q_storage_compressor_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_q_storage_compressor_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_q_storage_compressor } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_q_storage_compressor"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_quantum_sphereTT
				hidden_effect = { add_relic = gpm_r_quantum_sphere }
				set_country_flag = gpm_has_r_quantum_sphere_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_quantum_sphere
					remove_country_flag = gpm_has_r_quantum_sphere_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_quantum_sphere_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_quantum_sphere } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_quantum_sphere"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_self_assembly_hubTT
				hidden_effect = { add_relic = gpm_r_self_assembly_hub }
				set_country_flag = gpm_has_r_self_assembly_hub_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_self_assembly_hub
					remove_country_flag = gpm_has_r_self_assembly_hub_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_self_assembly_hub_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_self_assembly_hub } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_self_assembly_hub"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_self_repairing_obeliskTT
				hidden_effect = { add_relic = gpm_r_self_repairing_obelisk }
				set_country_flag = gpm_has_r_self_repairing_obelisk_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_self_repairing_obelisk
					remove_country_flag = gpm_has_r_self_repairing_obelisk_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_self_repairing_obelisk_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_self_repairing_obelisk } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_self_repairing_obelisk"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_sentinel_queenTT
				hidden_effect = { add_relic = gpm_r_sentinel_queen }
				set_country_flag = gpm_has_r_sentinel_queen_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_sentinel_queen
					remove_country_flag = gpm_has_r_sentinel_queen_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_sentinel_queen_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_sentinel_queen } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_sentinel_queen"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_soul_gemTT
				hidden_effect = { add_relic = gpm_r_soul_gem }
				set_country_flag = gpm_has_r_soul_gem_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_soul_gem
					remove_country_flag = gpm_has_r_soul_gem_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_soul_gem_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_soul_gem } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_soul_gem"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_venerable_dreadnaughtTT
				hidden_effect = { add_relic = gpm_r_venerable_dreadnaught }
				set_country_flag = gpm_has_r_venerable_dreadnaught_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_venerable_dreadnaught
					remove_country_flag = gpm_has_r_venerable_dreadnaught_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_venerable_dreadnaught_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_venerable_dreadnaught } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_venerable_dreadnaught"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_zero_energy_generatorTT
				hidden_effect = { add_relic = gpm_r_zero_energy_generator }
				set_country_flag = gpm_has_r_zero_energy_generator_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_zero_energy_generator
					remove_country_flag = gpm_has_r_zero_energy_generator_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_zero_energy_generator_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_zero_energy_generator } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_zero_energy_generator"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_alien_eggsTT
				hidden_effect = { add_relic = gpm_r_alien_eggs }
				set_country_flag = gpm_has_r_alien_eggs_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_alien_eggs
					remove_country_flag = gpm_has_r_alien_eggs_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_alien_eggs_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_alien_eggs } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_alien_eggs"
			}
			10 = {
				# our empire:
				custom_tooltip = gpm_operation_getaway_gpm_r_machine_world_coreTT
				hidden_effect = { add_relic = gpm_r_machine_world_core }
				set_country_flag = gpm_has_r_machine_world_core_relic@fromfrom  # we set this flag as the empire knows it was us. TODO: only the two negative outcomes!

				# target empire:
				fromfrom = { 
					remove_relic = gpm_r_machine_world_core
					remove_country_flag = gpm_has_r_machine_world_core_relic@root.owner  # removing to cleanup
					set_country_flag = gpm_has_r_machine_world_core_relic_stolen
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				every_country = {
					limit = {
						is_country_type = default
						NOT = { is_country = fromfrom }
						OR = {
							is_overlord_to = fromfrom
							is_in_federation_with = fromfrom
							opinion_level = {
								who = fromfrom
								level >= excellent
							}
						}
					}
					add_opinion_modifier = {
						who = root.owner
						modifier = opinion_gpm_stolen_relic
					}
					if = {
						limit = { is_overlord = yes }
						every_subject = {
							limit = {
								NOT = { is_country = fromfrom }
							}
							add_opinion_modifier = {
								who = root.owner
								modifier = opinion_gpm_stolen_relic
							}
						}
					}
				}
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_machine_world_core } } }
				log = ";OP - STEAL-RSLT; Empire [root.owner.GetName] STOLE Empire [fromfrom.GetName]'s Relic: gpm_r_machine_world_core"
			}
		}
		# Target Empire gets a notifaction message because I'm nice like that
		hidden_effect = {
			fromfrom = {
				country_event = { id = gpm_operation.82 }
			}
		}
	}

	after = {
		destroy_espionage_operation = from
	}
}

###########################
# gather relic information
###########################
# owner = the operating empire
# from = target
espionage_operation_event = {
	id = gpm_operation.10
	title = gpm_operation.10.name
	desc = gpm_operation.10.desc

	picture = GFX_evt_spymaster
	show_sound = event_espionage_concluded
	espionage_operation = yes
	is_triggered_only = yes

	trigger = {
		exists = from
	}

	immediate = {
	}

	option = {
		name = ACKNOWLEDGED
		# The operating empire gets notified which relic TARGET has
		hidden_effect = {
			owner = { country_event = { id = gpm_operation.11 } }
		}
		# log = "launch message event gpm_operation.11 on [owner.GetName]"
		# Target gets a notification that an unknown empire knows about relic if counter intel is medium
		# from = {
			# if = { 
				# limit = {
					# has_intel_level = {
						# category = government
						# level = 1
						# who = owner
					# }
				# }
				# create_message = {
					# type = GPM_MESSAGE_GATHER_INTELLIGENCE_RELIC_TARGET_MED
					# localization = GPM_MESSAGE_GATHER_INTELLIGENCE_RELIC_TARGET_MED_DESC
					# days = 180
					# target = capital_scope # target capital
					# variable = {
						# type = name
						# localization = COUNTRY
						# scope = owner
					# }
				# }
				# log = "create message on target [from.GetName] letting them know someone knows about their relic"
			# }
		# }

		# Target gets a notification that operating empire knows about relic if counter intel is high
		# from = {
			# if = {
				# limit = {
					# has_intel_level = {
						# category = government
						# level > 1
						# who = owner
					# }
				# }
				# create_message = {
					# type = GPM_MESSAGE_GATHER_INTELLIGENCE_RELIC_TARGET_HIGH
					# localization = GPM_MESSAGE_GATHER_INTELLIGENCE_RELIC_TARGET_HIGH_DESC
					# days = 180
					# target = capital_scope # target capital
					# variable = {
						# type = name
						# localization = COUNTRY
						# scope = owner
					# }
				# }
				# log = "create message on target [from.GetName] letting them know [owner.GetName] knows about their relic"
			# }
		# }

		###TEST
		# this is the one 
		from = {
			create_message = {
				type = GPM_MESSAGE_GATHER_INTELLIGENCE_RELIC_TARGET_HIGH
				localization = GPM_MESSAGE_GATHER_INTELLIGENCE_RELIC_TARGET_HIGH_DESC
				days = 180
				target = root.owner.capital_scope # the Go To
				variable = {
					type = name
					localization = COUNTRY
					scope = root.owner
				}
			}
			# log = "create test message on target [from.GetName] --- root.owner: [root.owner.GetName] "
		}
		# owner = {
			# create_message = {
				# type = GPM_MESSAGE_GATHER_INTELLIGENCE_RELIC_TARGET_HIGH
				# localization = GPM_MESSAGE_GATHER_INTELLIGENCE_RELIC_TARGET_HIGH_DESC
				# days = 180
				# target = from.capital_scope # the Go To
				# variable = {
					# type = name
					# localization = COUNTRY
					# scope = from
				# }
			# }
			# log = "create test message on target [owner.GetName] "
		# }
	}

	after = {
		destroy_espionage_operation = this
	}
}

# Message Event | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.11
	title = gpm_operation.11.name
	desc = gpm_operation.11.desc
	picture = GFX_evt_decryption
	show_sound = event_encrypted_comms
	is_triggered_only = yes

	immediate = {
		#### DEBUG LOGGING ####
		log = ";OP - GATHER-MSG; gpm_operation.11 (Gather Relic Information Message event) triggered by [from.owner.GetName] about relic from [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = ACKNOWLEDGED
		# log = "fromfrom = [fromfrom.GetName], from = [from.GetName], from.owner = [from.owner.GetName], root = [root.GetName]"
		locked_random_list = {
			10 = {
				custom_tooltip = gpm_gather_information_NO_RELIC
				modifier = { factor = 0
					fromfrom = {
						OR = {
							gpm_has_vanilla_precursor_relic = yes
							gpm_has_modded_precursor_relic = yes
							gpm_has_modded_non_precursor_relic = yes
						}
					}
				}
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_time_displacer_relicTT
				fromfrom = { set_country_flag = gpm_has_r_time_displacer_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_time_displacer_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_time_displacer } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_time_displacer"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_dragon_trophy_relicTT
				fromfrom = { set_country_flag = gpm_has_r_dragon_trophy_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_dragon_trophy_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_dragon_trophy } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_dragon_trophy"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_khans_throne_relicTT
				fromfrom = { set_country_flag = gpm_has_r_khans_throne_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_khans_throne_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_khans_throne } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_khans_throne"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_worm_scales_relicTT
				fromfrom = { set_country_flag = gpm_has_r_worm_scales_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_worm_scales_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_worm_scales } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_worm_scales"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_rubricator_relicTT
				fromfrom = { set_country_flag = gpm_has_r_rubricator_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_rubricator_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_rubricator } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_rubricator"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_galaxy_relicTT
				fromfrom = { set_country_flag = gpm_has_r_galaxy_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_galaxy_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_galaxy } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_galaxy"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_omnicodex_relicTT
				fromfrom = { set_country_flag = gpm_has_r_omnicodex_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_omnicodex_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_omnicodex } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_omnicodex"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_surveyor_relicTT
				fromfrom = { set_country_flag = gpm_has_r_surveyor_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_surveyor_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_surveyor } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_surveyor"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_galatron_relicTT
				fromfrom = { set_country_flag = gpm_has_r_galatron_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_galatron_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_galatron } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_galatron"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_ancient_sword_relicTT
				fromfrom = { set_country_flag = gpm_has_r_ancient_sword_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_ancient_sword_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_ancient_sword } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_ancient_sword"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_severed_head_relicTT
				fromfrom = { set_country_flag = gpm_has_r_severed_head_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_severed_head_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_severed_head } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_severed_head"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_prethoryn_queen_relicTT
				fromfrom = { set_country_flag = gpm_has_r_prethoryn_queen_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_prethoryn_queen_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_prethoryn_queen } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_prethoryn_queen"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_unbidden_warlock_relicTT
				fromfrom = { set_country_flag = gpm_has_r_unbidden_warlock_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_unbidden_warlock_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_unbidden_warlock } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_unbidden_warlock"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_contingency_core_relicTT
				fromfrom = { set_country_flag = gpm_has_r_contingency_core_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_contingency_core_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_contingency_core } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_contingency_core"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_zro_crystal_relicTT
				fromfrom = { set_country_flag = gpm_has_r_zro_crystal_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_zro_crystal_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_zro_crystal } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_zro_crystal"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_the_last_baol_relicTT
				fromfrom = { set_country_flag = gpm_has_r_the_last_baol_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_the_last_baol_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_the_last_baol } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_the_last_baol"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_the_defragmentor_relicTT
				fromfrom = { set_country_flag = gpm_has_r_the_defragmentor_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_the_defragmentor_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_the_defragmentor } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_the_defragmentor"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_reality_perforator_relicTT
				fromfrom = { set_country_flag = gpm_has_r_reality_perforator_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_reality_perforator_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_reality_perforator } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_reality_perforator"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_pox_sample_relicTT
				fromfrom = { set_country_flag = gpm_has_r_pox_sample_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_pox_sample_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_pox_sample } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_pox_sample"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_cryo_core_relicTT
				fromfrom = { set_country_flag = gpm_has_r_cryo_core_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_cryo_core_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_cryo_core } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_cryo_core"
			}
			10 = {
				custom_tooltip = gpm_gather_information_r_war_forge_relicTT
				fromfrom = { set_country_flag = gpm_has_r_war_forge_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_war_forge_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = r_war_forge } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: r_war_forge"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_ai_architect_relicTT
				fromfrom = { set_country_flag = gpm_has_r_ai_architect_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_ai_architect_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_ai_architect } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_ai_architect"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_banner_of_the_fallen_relicTT
				fromfrom = { set_country_flag = gpm_has_r_banner_of_the_fallen_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_banner_of_the_fallen_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_banner_of_the_fallen } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_banner_of_the_fallen"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_cloaking_device_relicTT
				fromfrom = { set_country_flag = gpm_has_r_cloaking_device_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_cloaking_device_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_cloaking_device } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_cloaking_device"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_codex_administratum_relicTT
				fromfrom = { set_country_flag = gpm_has_r_codex_administratum_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_codex_administratum_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_codex_administratum } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_codex_administratum"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_datacube_relicTT
				fromfrom = { set_country_flag = gpm_has_r_datacube_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_datacube_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_datacube } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_datacube"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_earthquake_engine_relicTT
				fromfrom = { set_country_flag = gpm_has_r_earthquake_engine_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_earthquake_engine_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_earthquake_engine } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_earthquake_engine"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_encrypted_sct_relicTT
				fromfrom = { set_country_flag = gpm_has_r_encrypted_sct_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_encrypted_sct_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_encrypted_sct } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_encrypted_sct"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_encyclopedia_galactica_relicTT
				fromfrom = { set_country_flag = gpm_has_r_encyclopedia_galactica_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_encyclopedia_galactica_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_encyclopedia_galactica } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_encyclopedia_galactica"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_enigmatic_advisor_relicTT
				fromfrom = { set_country_flag = gpm_has_r_enigmatic_advisor_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_enigmatic_advisor_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_enigmatic_advisor } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_enigmatic_advisor"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_experimental_weapon_relicTT
				fromfrom = { set_country_flag = gpm_has_r_experimental_weapon_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_experimental_weapon_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_experimental_weapon } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_experimental_weapon"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_fallout_emergency_replicator_relicTT
				fromfrom = { set_country_flag = gpm_has_r_fallout_emergency_replicator_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_fallout_emergency_replicator_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_fallout_emergency_replicator } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_fallout_emergency_replicator"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_gravity_engine_relicTT
				fromfrom = { set_country_flag = gpm_has_r_gravity_engine_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_gravity_engine_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_gravity_engine } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_gravity_engine"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_manufactorium_ship_relicTT
				fromfrom = { set_country_flag = gpm_has_r_manufactorium_ship_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_manufactorium_ship_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_manufactorium_ship } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_manufactorium_ship"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_mysterious_shield_generator_relicTT
				fromfrom = { set_country_flag = gpm_has_r_mysterious_shield_generator_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_mysterious_shield_generator_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_mysterious_shield_generator } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_mysterious_shield_generator"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_positronic_microchip_relicTT
				fromfrom = { set_country_flag = gpm_has_r_positronic_microchip_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_positronic_microchip_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_positronic_microchip } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_positronic_microchip"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_power_core_relicTT
				fromfrom = { set_country_flag = gpm_has_r_power_core_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_power_core_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_power_core } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_power_core"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_q_storage_compressor_relicTT
				fromfrom = { set_country_flag = gpm_has_r_q_storage_compressor_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_q_storage_compressor_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_q_storage_compressor } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_q_storage_compressor"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_quantum_sphere_relicTT
				fromfrom = { set_country_flag = gpm_has_r_quantum_sphere_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_quantum_sphere_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_quantum_sphere } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_quantum_sphere"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_self_assembly_hub_relicTT
				fromfrom = { set_country_flag = gpm_has_r_self_assembly_hub_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_self_assembly_hub_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_self_assembly_hub } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_self_assembly_hub"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_self_repairing_obelisk_relicTT
				fromfrom = { set_country_flag = gpm_has_r_self_repairing_obelisk_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_self_repairing_obelisk_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_self_repairing_obelisk } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_self_repairing_obelisk"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_sentinel_queen_relicTT
				fromfrom = { set_country_flag = gpm_has_r_sentinel_queen_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_sentinel_queen_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_sentinel_queen } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_sentinel_queen"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_soul_gem_relicTT
				fromfrom = { set_country_flag = gpm_has_r_soul_gem_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_soul_gem_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_soul_gem } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_soul_gem"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_venerable_dreadnaught_relicTT
				fromfrom = { set_country_flag = gpm_has_r_venerable_dreadnaught_relic@root }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_venerable_dreadnaught_relic@root } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_venerable_dreadnaught } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_venerable_dreadnaught"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_zero_energy_generator_relicTT
				fromfrom = { set_country_flag = gpm_has_r_zero_energy_generator_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_zero_energy_generator_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_zero_energy_generator } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_zero_energy_generator"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_alien_eggs_relicTT
				fromfrom = { set_country_flag = gpm_has_r_alien_eggs_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_alien_eggs_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_alien_eggs } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_alien_eggs"
			}
			10 = {
				custom_tooltip = gpm_gather_information_gpm_r_machine_world_core_relicTT
				fromfrom = { set_country_flag = gpm_has_r_machine_world_core_relic@root.owner }
				modifier = { factor = 0 fromfrom = { has_country_flag = gpm_has_r_machine_world_core_relic@root.owner } }
				modifier = { factor = 0 fromfrom = { NOT = { has_relic = gpm_r_machine_world_core } } }
				log = ";OP - GATHER-RSLT; Empire [from.owner.GetName] knows about Empire [fromfrom.GetName]'s Relic: gpm_r_machine_world_core"
			}
		}
	}
}

# The Getaway (Good) Target Empire Notification Event | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.80
	title = gpm_operation.80.name
	desc = gpm_operation.80.desc
	picture = GFX_evt_ancient_artifact
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = ";OP - STEAL-MSG; gpm_operation.80 (The Getaway good NOTIFICATION) triggered on FROM-OWNER: [from.owner.GetName] | FROMFROM: [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.80.a
		if = {
			limit = { has_country_flag = gpm_has_r_time_displacer_relic_stolen }
			remove_country_flag = gpm_has_r_time_displacer_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_time_displacerTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_dragon_trophy_relic_stolen }
			remove_country_flag = gpm_has_r_dragon_trophy_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_dragon_trophyTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_khans_throne_relic_stolen }
			remove_country_flag = gpm_has_r_khans_throne_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_khans_throneTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_worm_scales_relic_stolen }
			remove_country_flag = gpm_has_r_worm_scales_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_worm_scalesTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_rubricator_relic_stolen }
			remove_country_flag = gpm_has_r_rubricator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_rubricatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_galaxy_relic_stolen }
			remove_country_flag = gpm_has_r_galaxy_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_galaxyTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_omnicodex_relic_stolen }
			remove_country_flag = gpm_has_r_omnicodex_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_omnicodexTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_surveyor_relic_stolen }
			remove_country_flag = gpm_has_r_surveyor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_surveyorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_galatron_relic_stolen }
			remove_country_flag = gpm_has_r_galatron_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_galatronTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_ancient_sword_relic_stolen }
			remove_country_flag = gpm_has_r_ancient_sword_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_ancient_swordTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_severed_head_relic_stolen }
			remove_country_flag = gpm_has_r_severed_head_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_severed_headTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_prethoryn_queen_relic_stolen }
			remove_country_flag = gpm_has_r_prethoryn_queen_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_prethoryn_queenTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_unbidden_warlock_relic_stolen }
			remove_country_flag = gpm_has_r_unbidden_warlock_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_unbidden_warlockTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_contingency_core_relic_stolen }
			remove_country_flag = gpm_has_r_contingency_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_contingency_coreTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_zro_crystal_relic_stolen }
			remove_country_flag = gpm_has_r_zro_crystal_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_zro_crystalTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_the_last_baol_relic_stolen }
			remove_country_flag = gpm_has_r_the_last_baol_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_the_last_baolTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_the_defragmentor_relic_stolen }
			remove_country_flag = gpm_has_r_the_defragmentor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_the_defragmentorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_reality_perforator_relic_stolen }
			remove_country_flag = gpm_has_r_reality_perforator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_reality_perforatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_pox_sample_relic_stolen }
			remove_country_flag = gpm_has_r_pox_sample_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_pox_sampleTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_cryo_core_relic_stolen }
			remove_country_flag = gpm_has_r_cryo_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_cryo_coreTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_war_forge_relic_stolen }
			remove_country_flag = gpm_has_r_war_forge_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_war_forgeTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_ai_architect_relic_stolen }
			remove_country_flag = gpm_has_r_ai_architect_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_ai_architectTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_banner_of_the_fallen_relic_stolen }
			remove_country_flag = gpm_has_r_banner_of_the_fallen_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_banner_of_the_fallenTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_cloaking_device_relic_stolen }
			remove_country_flag = gpm_has_r_cloaking_device_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_cloaking_deviceTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_codex_administratum_relic_stolen }
			remove_country_flag = gpm_has_r_codex_administratum_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_codex_administratumTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_datacube_relic_stolen }
			remove_country_flag = gpm_has_r_datacube_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_datacubeTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_earthquake_engine_relic_stolen }
			remove_country_flag = gpm_has_r_earthquake_engine_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_earthquake_engineTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_encrypted_sct_relic_stolen }
			remove_country_flag = gpm_has_r_encrypted_sct_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_encrypted_sctTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_encyclopedia_galactica_relic_stolen }
			remove_country_flag = gpm_has_r_encyclopedia_galactica_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_encyclopedia_galacticaTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_enigmatic_advisor_relic_stolen }
			remove_country_flag = gpm_has_r_enigmatic_advisor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_enigmatic_advisorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_experimental_weapon_relic_stolen }
			remove_country_flag = gpm_has_r_experimental_weapon_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_experimental_weaponTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_fallout_emergency_replicator_relic_stolen }
			remove_country_flag = gpm_has_r_fallout_emergency_replicator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_fallout_emergency_replicatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_gravity_engine_relic_stolen }
			remove_country_flag = gpm_has_r_gravity_engine_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_gravity_engineTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_manufactorium_ship_relic_stolen }
			remove_country_flag = gpm_has_r_manufactorium_ship_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_manufactorium_shipTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_mysterious_shield_generator_relic_stolen }
			remove_country_flag = gpm_has_r_mysterious_shield_generator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_mysterious_shield_generatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_positronic_microchip_relic_stolen }
			remove_country_flag = gpm_has_r_positronic_microchip_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_positronic_microchipTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_power_core_relic_stolen }
			remove_country_flag = gpm_has_r_power_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_power_coreTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_q_storage_compressor_relic_stolen }
			remove_country_flag = gpm_has_r_q_storage_compressor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_q_storage_compressorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_quantum_sphere_relic_stolen }
			remove_country_flag = gpm_has_r_quantum_sphere_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_quantum_sphereTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_self_assembly_hub_relic_stolen }
			remove_country_flag = gpm_has_r_self_assembly_hub_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_self_assembly_hubTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_self_repairing_obelisk_relic_stolen }
			remove_country_flag = gpm_has_r_self_repairing_obelisk_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_self_repairing_obeliskTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_sentinel_queen_relic_stolen }
			remove_country_flag = gpm_has_r_sentinel_queen_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_sentinel_queenTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_soul_gem_relic_stolen }
			remove_country_flag = gpm_has_r_soul_gem_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_soul_gemTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_venerable_dreadnaught_relic_stolen }
			remove_country_flag = gpm_has_r_venerable_dreadnaught_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_venerable_dreadnaughtTT }		
		}
		if = {
			limit = { has_country_flag = gpm_has_r_zero_energy_generator_relic_stolen }
			remove_country_flag = gpm_has_r_zero_energy_generator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_zero_energy_generatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_alien_eggs_relic_stolen }
			remove_country_flag = gpm_has_r_alien_eggs_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_alien_eggsTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_machine_world_core_relic_stolen }
			remove_country_flag = gpm_has_r_machine_world_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_machine_world_coreTT }
		}
	}
}

# The Getaway (Enraged) Target Empire Notification Event | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.81
	title = gpm_operation.80.name
	desc = gpm_operation.81.desc
	picture = GFX_evt_ancient_artifact
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = ";OP - STEAL-MSG; gpm_operation.81 (The Getaway Enraged NOTIFICATION) triggered on FROM-OWNER: [from.owner.GetName] | FROMFROM: [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.80.a
		if = {
			limit = { has_country_flag = gpm_has_r_time_displacer_relic_stolen }
			remove_country_flag = gpm_has_r_time_displacer_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_time_displacerTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_dragon_trophy_relic_stolen }
			remove_country_flag = gpm_has_r_dragon_trophy_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_dragon_trophyTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_khans_throne_relic_stolen }
			remove_country_flag = gpm_has_r_khans_throne_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_khans_throneTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_worm_scales_relic_stolen }
			remove_country_flag = gpm_has_r_worm_scales_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_worm_scalesTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_rubricator_relic_stolen }
			remove_country_flag = gpm_has_r_rubricator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_rubricatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_galaxy_relic_stolen }
			remove_country_flag = gpm_has_r_galaxy_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_galaxyTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_omnicodex_relic_stolen }
			remove_country_flag = gpm_has_r_omnicodex_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_omnicodexTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_surveyor_relic_stolen }
			remove_country_flag = gpm_has_r_surveyor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_surveyorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_galatron_relic_stolen }
			remove_country_flag = gpm_has_r_galatron_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_galatronTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_ancient_sword_relic_stolen }
			remove_country_flag = gpm_has_r_ancient_sword_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_ancient_swordTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_severed_head_relic_stolen }
			remove_country_flag = gpm_has_r_severed_head_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_severed_headTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_prethoryn_queen_relic_stolen }
			remove_country_flag = gpm_has_r_prethoryn_queen_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_prethoryn_queenTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_unbidden_warlock_relic_stolen }
			remove_country_flag = gpm_has_r_unbidden_warlock_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_unbidden_warlockTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_contingency_core_relic_stolen }
			remove_country_flag = gpm_has_r_contingency_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_contingency_coreTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_zro_crystal_relic_stolen }
			remove_country_flag = gpm_has_r_zro_crystal_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_zro_crystalTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_the_last_baol_relic_stolen }
			remove_country_flag = gpm_has_r_the_last_baol_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_the_last_baolTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_the_defragmentor_relic_stolen }
			remove_country_flag = gpm_has_r_the_defragmentor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_the_defragmentorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_reality_perforator_relic_stolen }
			remove_country_flag = gpm_has_r_reality_perforator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_reality_perforatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_pox_sample_relic_stolen }
			remove_country_flag = gpm_has_r_pox_sample_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_pox_sampleTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_cryo_core_relic_stolen }
			remove_country_flag = gpm_has_r_cryo_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_cryo_coreTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_war_forge_relic_stolen }
			remove_country_flag = gpm_has_r_war_forge_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_war_forgeTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_ai_architect_relic_stolen }
			remove_country_flag = gpm_has_r_ai_architect_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_ai_architectTT }		
		}
		if = {
			limit = { has_country_flag = gpm_has_r_banner_of_the_fallen_relic_stolen }
			remove_country_flag = gpm_has_r_banner_of_the_fallen_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_banner_of_the_fallenTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_cloaking_device_relic_stolen }
			remove_country_flag = gpm_has_r_cloaking_device_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_cloaking_deviceTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_codex_administratum_relic_stolen }
			remove_country_flag = gpm_has_r_codex_administratum_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_codex_administratumTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_datacube_relic_stolen }
			remove_country_flag = gpm_has_r_datacube_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_datacubeTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_earthquake_engine_relic_stolen }
			remove_country_flag = gpm_has_r_earthquake_engine_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_earthquake_engineTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_encrypted_sct_relic_stolen }
			remove_country_flag = gpm_has_r_encrypted_sct_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_encrypted_sctTT }		
		}
		if = {
			limit = { has_country_flag = gpm_has_r_encyclopedia_galactica_relic_stolen }
			remove_country_flag = gpm_has_r_encyclopedia_galactica_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_encyclopedia_galacticaTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_enigmatic_advisor_relic_stolen }
			remove_country_flag = gpm_has_r_enigmatic_advisor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_enigmatic_advisorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_experimental_weapon_relic_stolen }
			remove_country_flag = gpm_has_r_experimental_weapon_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_experimental_weaponTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_fallout_emergency_replicator_relic_stolen }
			remove_country_flag = gpm_has_r_fallout_emergency_replicator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_fallout_emergency_replicatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_gravity_engine_relic_stolen }
			remove_country_flag = gpm_has_r_gravity_engine_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_gravity_engineTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_manufactorium_ship_relic_stolen }
			remove_country_flag = gpm_has_r_manufactorium_ship_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_manufactorium_shipTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_mysterious_shield_generator_relic_stolen }
			remove_country_flag = gpm_has_r_mysterious_shield_generator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_mysterious_shield_generatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_positronic_microchip_relic_stolen }
			remove_country_flag = gpm_has_r_positronic_microchip_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_positronic_microchipTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_power_core_relic_stolen }
			remove_country_flag = gpm_has_r_power_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_power_coreTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_q_storage_compressor_relic_stolen }
			remove_country_flag = gpm_has_r_q_storage_compressor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_q_storage_compressorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_quantum_sphere_relic_stolen }
			remove_country_flag = gpm_has_r_quantum_sphere_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_quantum_sphereTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_self_assembly_hub_relic_stolen }
			remove_country_flag = gpm_has_r_self_assembly_hub_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_self_assembly_hubTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_self_repairing_obelisk_relic_stolen }
			remove_country_flag = gpm_has_r_self_repairing_obelisk_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_self_repairing_obeliskTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_sentinel_queen_relic_stolen }
			remove_country_flag = gpm_has_r_sentinel_queen_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_sentinel_queenTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_soul_gem_relic_stolen }
			remove_country_flag = gpm_has_r_soul_gem_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_soul_gemTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_venerable_dreadnaught_relic_stolen }
			remove_country_flag = gpm_has_r_venerable_dreadnaught_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_venerable_dreadnaughtTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_zero_energy_generator_relic_stolen }
			remove_country_flag = gpm_has_r_zero_energy_generator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_zero_energy_generatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_alien_eggs_relic_stolen }
			remove_country_flag = gpm_has_r_alien_eggs_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_alien_eggsTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_machine_world_core_relic_stolen }
			remove_country_flag = gpm_has_r_machine_world_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_machine_world_coreTT }
		}
	}
}

# The Getaway (Allies) Target Empire Notification Event | from = operation | fromfrom = target
country_event = {
	id = gpm_operation.82
	title = gpm_operation.80.name
	desc = gpm_operation.82.desc
	picture = GFX_evt_ancient_artifact
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		#### DEBUG LOGGING ####
		log = ";OP - STEAL-MSG; gpm_operation.82 (The Getaway allies NOTIFICATION) triggered on FROM-OWNER: [from.owner.GetName] | FROMFROM: [fromfrom.GetName]"
		#### ##################
	}

	option = {
		name = gpm_operation.80.a
		if = {
			limit = { has_country_flag = gpm_has_r_time_displacer_relic_stolen }
			remove_country_flag = gpm_has_r_time_displacer_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_time_displacerTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_dragon_trophy_relic_stolen }
			remove_country_flag = gpm_has_r_dragon_trophy_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_dragon_trophyTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_khans_throne_relic_stolen }
			remove_country_flag = gpm_has_r_khans_throne_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_khans_throneTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_worm_scales_relic_stolen }
			remove_country_flag = gpm_has_r_worm_scales_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_worm_scalesTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_rubricator_relic_stolen }
			remove_country_flag = gpm_has_r_rubricator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_rubricatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_galaxy_relic_stolen }
			remove_country_flag = gpm_has_r_galaxy_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_galaxyTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_omnicodex_relic_stolen }
			remove_country_flag = gpm_has_r_omnicodex_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_omnicodexTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_surveyor_relic_stolen }
			remove_country_flag = gpm_has_r_surveyor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_surveyorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_galatron_relic_stolen }
			remove_country_flag = gpm_has_r_galatron_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_galatronTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_ancient_sword_relic_stolen }
			remove_country_flag = gpm_has_r_ancient_sword_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_ancient_swordTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_severed_head_relic_stolen }
			remove_country_flag = gpm_has_r_severed_head_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_severed_headTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_prethoryn_queen_relic_stolen }
			remove_country_flag = gpm_has_r_prethoryn_queen_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_prethoryn_queenTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_unbidden_warlock_relic_stolen }
			remove_country_flag = gpm_has_r_unbidden_warlock_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_unbidden_warlockTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_contingency_core_relic_stolen }
			remove_country_flag = gpm_has_r_contingency_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_contingency_coreTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_zro_crystal_relic_stolen }
			remove_country_flag = gpm_has_r_zro_crystal_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_zro_crystalTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_the_last_baol_relic_stolen }
			remove_country_flag = gpm_has_r_the_last_baol_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_the_last_baolTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_the_defragmentor_relic_stolen }
			remove_country_flag = gpm_has_r_the_defragmentor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_the_defragmentorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_reality_perforator_relic_stolen }
			remove_country_flag = gpm_has_r_reality_perforator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_reality_perforatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_pox_sample_relic_stolen }
			remove_country_flag = gpm_has_r_pox_sample_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_pox_sampleTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_cryo_core_relic_stolen }
			remove_country_flag = gpm_has_r_cryo_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_cryo_coreTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_war_forge_relic_stolen }
			remove_country_flag = gpm_has_r_war_forge_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_r_war_forgeTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_ai_architect_relic_stolen }
			remove_country_flag = gpm_has_r_ai_architect_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_ai_architectTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_banner_of_the_fallen_relic_stolen }
			remove_country_flag = gpm_has_r_banner_of_the_fallen_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_banner_of_the_fallenTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_cloaking_device_relic_stolen }
			remove_country_flag = gpm_has_r_cloaking_device_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_cloaking_deviceTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_codex_administratum_relic_stolen }
			remove_country_flag = gpm_has_r_codex_administratum_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_codex_administratumTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_datacube_relic_stolen }
			remove_country_flag = gpm_has_r_datacube_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_datacubeTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_earthquake_engine_relic_stolen }
			remove_country_flag = gpm_has_r_earthquake_engine_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_earthquake_engineTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_encrypted_sct_relic_stolen }
			remove_country_flag = gpm_has_r_encrypted_sct_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_encrypted_sctTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_encyclopedia_galactica_relic_stolen }
			remove_country_flag = gpm_has_r_encyclopedia_galactica_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_encyclopedia_galacticaTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_enigmatic_advisor_relic_stolen }
			remove_country_flag = gpm_has_r_enigmatic_advisor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_enigmatic_advisorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_experimental_weapon_relic_stolen }
			remove_country_flag = gpm_has_r_experimental_weapon_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_experimental_weaponTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_fallout_emergency_replicator_relic_stolen }
			remove_country_flag = gpm_has_r_fallout_emergency_replicator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_fallout_emergency_replicatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_gravity_engine_relic_stolen }
			remove_country_flag = gpm_has_r_gravity_engine_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_gravity_engineTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_manufactorium_ship_relic_stolen }
			remove_country_flag = gpm_has_r_manufactorium_ship_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_manufactorium_shipTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_mysterious_shield_generator_relic_stolen }
			remove_country_flag = gpm_has_r_mysterious_shield_generator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_mysterious_shield_generatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_positronic_microchip_relic_stolen }
			remove_country_flag = gpm_has_r_positronic_microchip_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_positronic_microchipTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_power_core_relic_stolen }
			remove_country_flag = gpm_has_r_power_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_power_coreTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_q_storage_compressor_relic_stolen }
			remove_country_flag = gpm_has_r_q_storage_compressor_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_q_storage_compressorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_quantum_sphere_relic_stolen }
			remove_country_flag = gpm_has_r_quantum_sphere_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_quantum_sphereTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_self_assembly_hub_relic_stolen }
			remove_country_flag = gpm_has_r_self_assembly_hub_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_self_assembly_hubTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_self_repairing_obelisk_relic_stolen }
			remove_country_flag = gpm_has_r_self_repairing_obelisk_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_self_repairing_obeliskTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_sentinel_queen_relic_stolen }
			remove_country_flag = gpm_has_r_sentinel_queen_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_sentinel_queenTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_soul_gem_relic_stolen }
			remove_country_flag = gpm_has_r_soul_gem_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_soul_gemTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_venerable_dreadnaught_relic_stolen }
			remove_country_flag = gpm_has_r_venerable_dreadnaught_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_venerable_dreadnaughtTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_zero_energy_generator_relic_stolen }
			remove_country_flag = gpm_has_r_zero_energy_generator_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_zero_energy_generatorTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_alien_eggs_relic_stolen }
			remove_country_flag = gpm_has_r_alien_eggs_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_alien_eggsTT }
		}
		if = {
			limit = { has_country_flag = gpm_has_r_machine_world_core_relic_stolen }
			remove_country_flag = gpm_has_r_machine_world_core_relic_stolen
			FROMFROM = { custom_tooltip = gpm_operation_getaway_gpm_r_machine_world_coreTT }
		}
	}
}