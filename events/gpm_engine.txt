namespace = gpm_engine

# has_planet_flag = forbid_guillis_planet_modifiers    -- used by other mods to prevent spawning modifiers/stuff


# possible values:
# 	pre_triggers = {
#		has_owner					# whether the  planet has an owner
#		is_homeworld_				# whether the planet is its owner's homeworld
#		original_owner				# whether the planet still belong to its original owner
#		is_ai 						# whether the planet owner is controlled by the computer (vs controlled by a human)
#		has_ground_combat			# whether ground combat is going on the planet
#		is_capital					# whether the planet is the capital world of the empire it belongs too
#		is_occupied_flag			# whether the planet is occupied
#	}
#

# initialisation called from gpm_game_start or the game start menu
# some spawn engine parts happen after 2 days to spread the workload on user's machines. This to reduce the initial "lag"


# Initialiser Galaxy
# Spawn Oppertunity Modifier On Mars and other random planet or system stuff
country_event = {
	id = gpm_engine.0
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes

	immediate = {
		# global target to hook variables and stuff to for galaxy gen mechanics
		save_global_event_target_as = gpm_host_country_event_target
		set_variable = { which = gpm_galaxy_setting_habitable_worlds_scale value = 1 }

		# SOL system
		random_system = {
			limit = { has_star_flag = sol_system }
			random_system_planet = {
				limit = {
					is_capital = no
					is_planet_class = pc_barren
					is_moon = no
					OR = {
						has_planet_flag = mars
						planet_size = 13 # safety check
					}
					NOT = { has_modifier = gpm_oppertunity }
				}
				add_modifier = { modifier = gpm_oppertunity days = -1 }
			}
		}

		# event to spawn primitive relic worlds
		random_country = {
			limit = { is_ai = yes }
			country_event = {
				id = gpm_engine.999
			}
		}

		# Planet Wonders
		# Guaranteed wonders, one per planet class
		if = {
			limit = { gpm_are_wonders_enabled = yes	}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_desert
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_desert = yes
			}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_arid
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_arid = yes
			}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_savannah
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_savannah = yes
			}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_tropical
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_tropical = yes
			}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_continental
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_continental = yes
			}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_ocean
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_ocean = yes
			}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_arctic
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_arctic = yes
			}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_alpine
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_alpine = yes
			}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_tundra
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_tundra = yes
			}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_gaia
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_gaia = yes
			}
			random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				limit = {
					NAND = {
						is_capital = yes
						gpm_is_planet_primitive = no
					}
					is_planet_class = pc_nuked
					NOT = { gpm_is_planet_fallen_empire = yes }
					NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
				}
				# Planet Modifier Scaling
				if = {
					limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					gpm_scale_planet_modifiers = yes
				}
				gpm_designate_wonder_world = yes
				add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
				gpm_spawn_planet_wonders_nuked = yes
			}

			# extra random planet wonders
			while = {
				count = 4
				random_galaxy_planet = {
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
					limit = {
						NOT = { gpm_is_a_wondrous_world = yes }
						gpm_is_planet_class_normal_habitable = yes
						NOT = { gpm_is_planet_fallen_empire = yes }
						NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
						NAND = {
							is_capital = yes
							gpm_is_planet_primitive = no
						}
					}
					random_list = {
						50 = {}
						50 = {
							# Planet Modifier Scaling
							if = {
								limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
								gpm_scale_planet_modifiers = yes
							}
							gpm_designate_wonder_world = yes
							add_modifier = { modifier = gpm_planet_wonder_discovered multiplier = gpm_planet_size_multiplier_wonders }
							gpm_spawn_planet_wonders_any = yes
							# Galaxy age setting modifier
							modifier = { factor = 1.33 has_global_flag = gpm_galaxy_age_young }
							modifier = { factor = 0.66 has_global_flag = gpm_galaxy_age_old }
						}
					}
				}
			}
		}

		# Main engine to spawn all planet modifiers
		every_galaxy_planet = {
			# Planet Modifier Scaling
			if = {
				limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
				gpm_scale_planet_modifiers = yes
			}
			if = {
				limit = { has_global_flag = gpm_scaling_multiplier_disabled }
				set_variable = { which = gpm_planet_size_multiplier value = 1 }
				set_variable = { which = gpm_planet_size_multiplier_wonders value = 1 }
				set_variable = { which = gpm_planet_size_multiplier_precursor value = 1 }
			}

			# used to 'limit' amount of terraformable able planets
			gpm_set_galaxy_scaler_planet_variable = yes


			# set precursor worlds
			if = {
				limit = { gpm_are_precursors_enabled = yes }
				planet_event = { id = gpm_engine.2 }
			}
			# spawn engine MASTER EVENT
			planet_event = { id = gpm_engine.1 days = 1 }

			# Cleanup
			# clear_variable = gpm_planet_size_multiplier
			# clear_variable = gpm_planet_size_multiplier_wonders
			# clear_variable = gpm_planet_size_multiplier_precursor
			# clear_variable = gpm_galaxy_setting_habitable_worlds_scale


			# added 3.6; spicing up fallen empire systems
			# Temp disabled, be more creative with this, also Giga incompatibility issue with dissapearing FE empire
			# if = {
			# 	limit = {
			# 		gpm_is_fallen_empire_space_owner = yes
			# 		gpm_is_planet_class_normal_habitable = no
			# 	}
			# 	gpm_set_fallen_empire_space_deposit = yes
			# }
		}
	}
}

# set precursor worlds event
planet_event = {
	id = gpm_engine.2
	hide_window = yes
	is_triggered_only = yes


	trigger = {
		OR = {
			gpm_is_planet_class_normal_uninhabitable = yes
			gpm_is_planet_class_normal_habitable = yes
			gpm_is_planet_class_nuked = yes
			gpm_is_planet_class_toxic = yes
			gpm_is_planet_class_barren = yes
			# gpm_is_planet_class_molten = yes
			gpm_is_planet_class_city = yes
			gpm_is_planet_primitive = yes
			gpm_is_planet_class_star = yes
		}
		NOT = { gpm_is_planet_class_molten = yes }
		NOT = { has_planet_flag = gpm_is_primitive_relic_world }
		NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
		NOT = { has_planet_flag = forbid_guillis_precursor_modifiers }
		gpm_engine_forbidden_planets = yes
		# Ego system
		NOT = { solar_system = { has_star_flag = gpm_guardians_ego_system } }
		# forbid space creature home systems
		solar_system = {
			NOR = {
				has_star_flag = drone_home_system
				has_star_flag = tiyanki_spawn_system
				has_star_flag = pirate_home_system
				has_star_flag = amoeba_home_system
				has_star_flag = gpm_precursor_machine_system
			}
		}
		# NAND = {
			# is_capital = yes
			# solar_system = {
				# has_star_flag = primitive_system
				# is_country_type = primitive
			# }
			# gpm_is_planet_primitive = no
		# }
		solar_system = {
			NAND = {
				exists = space_owner
				space_owner = { gpm_is_country_type_default = yes }
			}
		}
		NOT = { gpm_is_planet_fallen_empire = yes }
		NOT = { gpm_is_a_wondrous_world = yes }
	}

	immediate = {
		if = {
			limit = { gpm_is_planet_class_star = yes }
			random_list = {
				998 = {}
				2 = {
					# designate precursor world
					set_planet_flag = gpm_is_precursor_world
					solar_system = { set_star_flag = gpm_is_precursor_system }
					# Planet Modifier Scaling
					# if = {
					# 	limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
					# 	gpm_scale_planet_modifiers = yes
					# }
					# roll precursor modifiers
					add_modifier = { modifier = "gpm_precursor_star_filter" }
					# spawn precursor features
					clear_deposits = yes
					# gpm_spawn_precursor_features = yes
					modifier = { factor = 0.75 has_global_flag = gpm_galaxy_age_young } 	# GALAXY AGE: YOUNG  -25% spawn chance
					modifier = { factor = 1 has_global_flag = gpm_galaxy_age_young } 		# GALAXY AGE: NORMAL
					modifier = { factor = 1.25 has_global_flag = gpm_galaxy_age_old }		# GALAXY AGE: OLD # +25% spawn chance
				}
			}
		}

		if = {
			limit = {
				gpm_is_planet_class_normal_habitable = yes
				NOT = { gpm_is_planet_primitive = yes }
			}
			random_list = {
				900 = {}
				100 = {
					# designate precursor world
					set_planet_flag = gpm_is_precursor_world
					solar_system = { set_star_flag = gpm_is_precursor_system }
					# Planet Modifier Scaling
					if = {
						limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
						gpm_scale_planet_modifiers = yes
					}
					# roll precursor modifiers
					gpm_roll_precursor_modifiers = yes
					# spawn precursor features
					gpm_spawn_precursor_features = yes
					modifier = { factor = 0.75 has_global_flag = gpm_galaxy_age_young } 	# GALAXY AGE: YOUNG  -25% spawn chance
					modifier = { factor = 1 has_global_flag = gpm_galaxy_age_young } 		# GALAXY AGE: NORMAL
					modifier = { factor = 1.25 has_global_flag = gpm_galaxy_age_old }		# GALAXY AGE: OLD # +25% spawn chance
				}
			}
		}
		if = {
			limit = { gpm_is_planet_primitive = yes }
			random_list = {
				970 = {}
				30 = {
					# designate precursor world
					set_planet_flag = gpm_is_precursor_world
					solar_system = { set_star_flag = gpm_is_precursor_system }
					# Planet Modifier Scaling
					# if = {
						# limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
						# gpm_scale_planet_modifiers = yes
					# }
					# roll precursor modifiers
					gpm_roll_precursor_modifiers = yes
					# spawn precursor features
					gpm_spawn_precursor_features = yes
					modifier = { factor = 0.75 has_global_flag = gpm_galaxy_age_young }		# GALAXY AGE: YOUNG  -25% spawn chance
					modifier = { factor = 1 has_global_flag = gpm_galaxy_age_young } 		# GALAXY AGE: NORMAL
					modifier = { factor = 1.25 has_global_flag = gpm_galaxy_age_old }		# GALAXY AGE: OLD # +25% spawn chance
				}
			}
		}
		if = {
			limit = {
				OR = {
					gpm_is_planet_class_molten = yes
					gpm_is_planet_class_frozen = yes
					gpm_is_planet_class_barren = yes
					AND = {
						has_toxoids = yes
						gpm_is_planet_class_toxic = yes
					}
				}
			}
			random_list = {
				990 = {}
				10 = {
					# designate precursor world
					set_planet_flag = gpm_is_precursor_world
					solar_system = { set_star_flag = gpm_is_precursor_system }
					# Planet Modifier Scaling
					# if = {
						# limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
						# gpm_scale_planet_modifiers = yes
					# }
					# spawn precursor features
					# gpm_spawn_precursor_features = yes
					# chance to turn into precursor ruined world
					random_list = {
						40 = {}
						60 = {
							gpm_make_precursor_ruined_world = yes
							event_target:gpm_host_country_event_target = {
								change_variable = { which = gpm_precursor_archaeopolis_amount value = 1 }
							}
							# add a factor scale based on number of habitable worlds galaxy setting. Higher setting = more chance for a habitable precursor ruined world.
							modifier = { factor = gpm_galaxy_setting_habitable_worlds_scale } # scale chance bases on galaxy setting
							# not if you dont have ancrel DLC
							modifier = { factor = 0 has_ancrel = no }
							remove_modifier = terraforming_candidate
							modifier = { factor = 0
								any_system = {
									distance = {
										source = this
										use_bypasses = no
										min_jumps = 2
									}
									any_system_planet = {
										is_capital = yes
									}
								}
							}
							modifier = { factor = 0
								any_system = {
									distance = {
										source = this
										use_bypasses = no
										min_jumps = 4
									}
									any_system_planet = {
										is_planet_class = pc_gpm_precursor_tomb
									}
								}
							}
							modifier = { factor = 0
								OR = {
									AND = {
										galaxy_size = tiny
										event_target:gpm_host_country_event_target = {
											check_variable = {
												which = gpm_precursor_archaeopolis_amount
												value >= 2
											}
										}
									}
									AND = {
										galaxy_size = small
										event_target:gpm_host_country_event_target = {
											check_variable = {
												which = gpm_precursor_archaeopolis_amount
												value >= 3
											}
										}
									}
									AND = {
										galaxy_size = medium
										event_target:gpm_host_country_event_target = {
											check_variable = {
												which = gpm_precursor_archaeopolis_amount
												value >= 4
											}
										}
									}
									AND = {
										galaxy_size = large
										event_target:gpm_host_country_event_target = {
											check_variable = {
												which = gpm_precursor_archaeopolis_amount
												value >= 5
											}
										}
									}
									AND = {
										galaxy_size = huge
										event_target:gpm_host_country_event_target = {
											check_variable = {
												which = gpm_precursor_archaeopolis_amount
												value >= 6
											}
										}
									}
									AND = {
										NOR = {
											galaxy_size = tiny
											galaxy_size = small
											galaxy_size = medium
											galaxy_size = large
											galaxy_size = huge
										}
										event_target:gpm_host_country_event_target = {
											check_variable = {
												which = gpm_precursor_archaeopolis_amount
												value >= 6
											}
										}
									}
								}
							}
						}
					}
					# roll precursor modifiers
					gpm_roll_precursor_modifiers = yes
					# spawn precursor features
					gpm_spawn_precursor_features = yes
					if = {
						limit = {
							host_has_dlc = "Ancient Relics Story Pack"
							OR = {
								gpm_is_planet_class_hive = yes
								gpm_is_planet_class_machine = yes
								gpm_is_planet_class_city = yes
								gpm_is_planet_class_normal_habitable = yes
							}
							NOT = { is_planet_class = pc_gpm_precursor_tomb }
							OR = {
								has_deposit_for = shipclass_research_station
								has_deposit = no
							}
						}
						add_deposit = d_artifacts_planet_1
					}
					if = {
						limit = {
							host_has_dlc = "Ancient Relics Story Pack"
							NOR = {
								is_planet_class = pc_gpm_precursor_tomb
								gpm_is_planet_class_hive = yes
								gpm_is_planet_class_machine = yes
								gpm_is_planet_class_city = yes
								gpm_is_planet_class_normal_habitable = yes
							}
							OR = {
								has_deposit_for = shipclass_research_station
								has_deposit = no
							}
						}
						add_deposit = d_artifacts_1
					}
					modifier = { factor = 0.75 has_global_flag = gpm_galaxy_age_young }		# GALAXY AGE: YOUNG  -25% spawn chance
					modifier = { factor = 1 has_global_flag = gpm_galaxy_age_young } 		# GALAXY AGE: NORMAL
					modifier = { factor = 1.25 has_global_flag = gpm_galaxy_age_old }		# GALAXY AGE: OLD # +25% spawn chance
					modifier = { factor = gpm_galaxy_setting_habitable_worlds_scale }		# Scaler based on galaxy nr of habitable worlds setting# spawn a random mini megastructure to repair
				}
			}
		}
		if = {
			limit = { gpm_is_planet_class_nuked = yes }
			random_list = {
				700 = {}
				300 = {
					# designate precursor world
					set_planet_flag = gpm_is_precursor_world
					solar_system = { set_star_flag = gpm_is_precursor_system }
					# Planet Modifier Scaling
					# if = {
						# limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
						# gpm_scale_planet_modifiers = yes
					# }
					# roll precursor modifiers
					gpm_roll_precursor_modifiers = yes
					# spawn precursor features
					gpm_spawn_precursor_features = yes
					modifier = { factor = 0.75 has_global_flag = gpm_galaxy_age_young }		# GALAXY AGE: YOUNG  -25% spawn chance
					modifier = { factor = 1 has_global_flag = gpm_galaxy_age_young } 		# GALAXY AGE: NORMAL
					modifier = { factor = 1.25 has_global_flag = gpm_galaxy_age_old }		# GALAXY AGE: OLD # +25% spawn chance
				}
			}
		}
		if = {
			limit = { gpm_is_planet_class_city = yes }
			random_list = {
				800 = {}
				200 = {
					# designate precursor world
					set_planet_flag = gpm_is_precursor_world
					solar_system = { set_star_flag = gpm_is_precursor_system }
					# Planet Modifier Scaling
					# if = {
						# limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
						# gpm_scale_planet_modifiers = yes
					# }
					# roll precursor modifiers
					gpm_roll_precursor_modifiers = yes
					# spawn precursor features
					gpm_spawn_precursor_features = yes
					modifier = { factor = 0.75 has_global_flag = gpm_galaxy_age_young }		# GALAXY AGE: YOUNG  -25% spawn chance
					modifier = { factor = 1 has_global_flag = gpm_galaxy_age_young } 		# GALAXY AGE: NORMAL
					modifier = { factor = 1.25 has_global_flag = gpm_galaxy_age_old }		# GALAXY AGE: OLD # +25% spawn chance
				}
			}
		}

		## Precursor Planets
		# if = {
		# 	limit = {
		# 		gpm_is_a_precursor_world = yes
		# 		NOT = { gpm_has_precursor_modifiers = yes }
		# 	}
		# 	# Planet Modifier Scaling
		# 	if = {
		# 		limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
		# 		gpm_scale_planet_modifiers = yes
		# 	}
		# 	# if uninhabitable world, change into tomb world, relic world or precursor ruined world at random
		# 	random_list = {
		# 		55 = {}
		# 		45 = {
		# 			gpm_make_precursor_ruined_world = yes
		# 			modifier = { factor = gpm_galaxy_setting_habitable_worlds_scale } # scale chance bases on galaxy setting
		# 		}
		# 	}
		# 	# we roll for precursor modifiers
		# 	gpm_roll_precursor_modifiers = yes

		# 	if = {
		# 		limit = { gpm_is_planet_class_normal_habitable = yes }
		# 		gpm_spawn_precursor_features = yes
		# 	}
		# }
	}
}


# MASTER EVENT
# This one governs everything
planet_event = {
	id = gpm_engine.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_planet_flag = forbid_guillis_planet_modifiers }
		NOT = { solar_system = { has_star_flag = gpm_precursor_machine_system } }
	}

	immediate = {

		## STARS
		if = {
			limit = { gpm_is_planet_class_star = yes }
			planet_event = { id = gpm_engine.10 days = 2 }
		}

		## ASTEROIDS
		if = {
			limit = { gpm_is_planet_class_asteroid = yes }
			planet_event = { id = gpm_engine.20 days = 2 }
		}

		## GAS GIANTS
		if = {
			limit = { gpm_is_planet_class_gas_giant = yes }
			planet_event = { id = gpm_engine.30 days = 3 }
		}

		## NORMAL UNINHABITABLE PLANETS (Barren, Frozen, Toxic, Molten)
		if = {
			limit = { gpm_is_planet_class_normal_uninhabitable = yes }
			planet_event = { id = gpm_engine.40 days = 6 }
		}

		## NUKED PLANETS
		if = {
			limit = { gpm_is_planet_class_nuked = yes NOT = { gpm_is_planet_fallen_empire = yes } }
			planet_event = { id = gpm_engine.50 days = 2 }
		}

		## NORMAL HABITABLE PLANETS (Colonizable standard planets)
		if = {
			limit = { gpm_is_planet_class_normal_habitable = yes NOT = { gpm_is_planet_fallen_empire = yes } }
			planet_event = { id = gpm_engine.60 days = 1 }
		}

		## CITY PLANETS
		if = {
			limit = { gpm_is_planet_class_city = yes NOT = { gpm_is_planet_fallen_empire = yes } }
			planet_event = { id = gpm_engine.70 days = 3 }
		}

		## MACHINE PLANETS
		if = {
			limit = { gpm_is_planet_class_machine = yes NOT = { gpm_is_planet_fallen_empire = yes } }
			planet_event = { id = gpm_engine.80 days = 3 }
		}

		## HIVE PLANETS
		if = {
			limit = { gpm_is_planet_class_hive = yes NOT = { gpm_is_planet_fallen_empire = yes } }
			planet_event = { id = gpm_engine.90 days = 3 }
		}

		## FALLEN EMPIRE PLANETS
		if = {
			limit = { has_owner = yes gpm_is_planet_fallen_empire = yes }
			planet_event = { id = gpm_engine.100 days = 10 }
		}

		## HABITATS
		if = {
			limit = { gpm_is_planet_class_habitat = yes NOT = { gpm_is_planet_fallen_empire = yes } }
			set_planet_flag = gpm_is_galaxy_generated_habitat
			planet_event = { id = gpm_engine.110 days = 5 }
		}

		## RINGWORLDS
		if = {
			limit = { gpm_is_planet_class_ringworld = yes NOT = { gpm_is_planet_fallen_empire = yes } }
			planet_event = { id = gpm_engine.120 days = 6 }
			set_planet_flag = gpm_is_galaxy_generated_ringworld
		}

		## PRIMITIVE PLANETS
		if = {
			limit = { gpm_is_planet_primitive = yes	}
			planet_event = { id = gpm_engine.130 days = 15 }
		}

		# Spawn a terraforming candidate if specific modifiers are present
		if = {
			limit = {
				OR = {
					gpm_is_planet_class_molten = yes
					gpm_is_planet_class_frozen = yes
					gpm_is_planet_class_barren = yes
				}
				gpm_has_required_terraform_modifier = no
				OR = {
					# has_modifier = gpm_unnatural_world
					has_modifier = gpm_ultra_rich_2
					has_modifier = gpm_spaceship_graveyard
					# has_modifier = gpm_old_world
					has_modifier = gpm_artificial_core
					gpm_has_precursor_modifiers = yes
				}
			}
			add_modifier = { modifier = terraforming_candidate }
		}
		if = {
			limit = {
					gpm_is_planet_class_toxic = yes
					has_toxoids = yes
					NOT = { has_modifier = toxic_terraforming_candidate }
					OR = {
						# has_modifier = gpm_unnatural_world
						has_modifier = gpm_ultra_rich_2
						has_modifier = gpm_spaceship_graveyard
						# has_modifier = gpm_old_world
						has_modifier = gpm_artificial_core
						gpm_has_precursor_modifiers = yes
					}
			}
			add_modifier = { modifier = toxic_terraforming_candidate }
		}


		# spawn a random mini megastructure to repair
		# 1 type per system to prevent ambient object and flag issues
		## ASTEROIDS
		if = {
			limit = {
				gpm_is_planet_class_asteroid = yes
				NOT = { has_global_flag = gpm_mini_megas_disabled }
			}
			random_list = {
				993 = { }
				7 = {
					gpm_spawn_ruined_mining_facility = yes
					set_planet_flag = has_gpm_ruined_mining_facility
					solar_system = { set_star_flag = has_gpm_ruined_mining_facility }
					modifier = { factor = 0 solar_system = { has_star_flag = has_gpm_ruined_mining_facility } }
					modifier = { factor = 0 solar_system = { exists = space_owner } }
					# Galaxy age setting modifier
					modifier = { factor = 0.75 has_global_flag = gpm_galaxy_age_young }
					modifier = { factor = 1.25 has_global_flag = gpm_galaxy_age_old }
					# modifier = { factor = 5 gpm_has_precursor_modifiers = yes }
					modifier = { factor = 10 solar_system = { has_star_flag = gpm_is_precursor_system } }
					modifier = { factor = 0
						any_system = {
							distance = {
								source = this
								use_bypasses = no
								min_jumps = 1
							}
							exists = owner
						}
					}
				}
			}
		}

		## GAS GIANTS
		if = {
			limit = {
				gpm_is_planet_class_gas_giant = yes
				NOT = { has_global_flag = gpm_mini_megas_disabled }
			}
			random_list = {
				996 = { }
				4 = {
					gpm_spawn_ruined_refinery = yes
					set_planet_flag = has_gpm_ruined_refinery
					solar_system = { set_star_flag = has_gpm_ruined_refinery }
					modifier = { factor = 0 solar_system = { has_star_flag = has_gpm_ruined_refinery } }
					modifier = { factor = 0 solar_system = { exists = space_owner } }
					# Galaxy age setting modifier
					modifier = { factor = 0.75 has_global_flag = gpm_galaxy_age_young }
					modifier = { factor = 1.25 has_global_flag = gpm_galaxy_age_old }
					# modifier = { factor = 5 gpm_has_precursor_modifiers = yes }
					modifier = { factor = 10 solar_system = { has_star_flag = gpm_is_precursor_system } }
					modifier = { factor = 0
						any_system = {
							distance = {
								source = this
								use_bypasses = no
								min_jumps = 1
							}
							exists = owner
						}
					}
				}
			}
		}

		## NORMAL UNINHABITABLE PLANETS (Barren, Frozen, Toxic, Molten)
		if = {
			limit = {
				gpm_is_planet_class_normal_uninhabitable = yes
				NOT = { has_global_flag = gpm_mini_megas_disabled }
			}
			random_list = {
				998 = { }
				1 = {
					gpm_spawn_ruined_observation_station = yes
					set_planet_flag = has_gpm_ruined_observation_station
					solar_system = { set_star_flag = has_gpm_ruined_observation_station }
					modifier = { factor = 0 solar_system = { has_star_flag = has_gpm_ruined_observation_station } }
					modifier = { factor = 0 solar_system = { exists = space_owner } }
					modifier = { factor = 10 gpm_has_precursor_modifiers = yes }
					# Galaxy age setting modifier
					modifier = { factor = 0.75 has_global_flag = gpm_galaxy_age_young }
					modifier = { factor = 1.25 has_global_flag = gpm_galaxy_age_old }
					# modifier = { factor = 5 solar_system = { has_star_flag = gpm_is_precursor_system } }
					modifier = { factor = 0
						any_system = {
							distance = {
								source = this
								use_bypasses = no
								min_jumps = 1
							}
							exists = owner
						}
					}
				}
			}
		}

		## STARS
		if = {
			limit = {
				gpm_is_planet_class_star = yes
				NOT = { has_global_flag = gpm_mini_megas_disabled }
			}
			random_list = {
				995 = { }
				3 = {
					gpm_spawn_ruined_silo = yes
					solar_system = { set_star_flag = has_gpm_ruined_silo }
					modifier = { factor = 0 solar_system = { has_star_flag = has_gpm_ruined_silo } }
					modifier = { factor = 0 solar_system = { exists = space_owner } }
					# Galaxy age setting modifier
					modifier = { factor = 0.75 has_global_flag = gpm_galaxy_age_young }
					modifier = { factor = 1.25 has_global_flag = gpm_galaxy_age_old }
					# modifier = { factor = 5 gpm_has_precursor_modifiers = yes }
					modifier = { factor = 10 solar_system = { has_star_flag = gpm_is_precursor_system } }
					modifier = { factor = 0
						any_system = {
							distance = {
								source = this
								use_bypasses = no
								min_jumps = 1
							}
							exists = owner
						}
					}
				}
			}
		}
	}
}

## STARS
planet_event = {
	id = gpm_engine.10
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		gpm_engine_forbidden_planets = yes
	}

	immediate = {
		gpm_roll_star_modifiers = yes
	}
}

## ASTEROIDS
planet_event = {
	id = gpm_engine.20
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		gpm_engine_forbidden_planets = yes
	}

	immediate = {
		gpm_roll_asteroid_modifiers = yes

		# remove % of base energy and mineral deposits
		gpm_remove_galaxy_generation_deposits = yes
	}
}

## GAS GIANTS
planet_event = {
	id = gpm_engine.30
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		gpm_engine_forbidden_planets = yes
	}

	immediate = {
		# planet ring spawning, doing it here for scope creep issue as well as finetuning capability. Not as elegant as I would like
		if = {
			limit = {
				NAND = {
					has_global_flag = gpm_planetary_rings_disabled
					exists = space_owner
				}
			}
			random_list = {
				120 = {
					modifier = {
						factor = 0
						OR = {
							has_planet_flag = gpm_rings_huge
							has_planet_flag = gpm_rings_large
							has_planet_flag = has_rings_01_large
							has_planet_flag = has_rings_02_large
							has_planet_flag = has_rings_03_large
							has_planet_flag = has_rings_04_large
							has_planet_flag = gpm_rings_medium
							has_planet_flag = has_rings_01_sparse
							has_planet_flag = has_rings_02_sparse
							has_planet_flag = has_rings_03_sparse
							has_planet_flag = has_rings_04_sparse
							has_planet_flag = gpm_rings_small
							has_planet_flag = has_rings_01_small
							has_planet_flag = has_rings_02_small
							has_planet_flag = has_rings_03_small
							has_planet_flag = has_rings_04_small
							has_planet_flag = has_rings_01_thin
							has_planet_flag = has_rings_02_thin
							has_planet_flag = has_rings_03_thin
							has_planet_flag = has_rings_01_low
							has_planet_flag = has_rings_02_low
							has_planet_flag = has_rings_01_rare
							has_planet_flag = has_rings_02_rare
						}
					}
				}
				10 = {
					gpm_spawn_planet_ring_modifier = yes
					gpm_spawn_RES = yes
					# Galaxy age setting modifier
					modifier = { factor = 1.2 has_global_flag = gpm_galaxy_age_young }
					modifier = { factor = 0.8 has_global_flag = gpm_galaxy_age_old }
				}
			}
		}

		gpm_roll_gas_giant_modifiers = yes

		# remove % of base energy and mineral deposits
		gpm_remove_galaxy_generation_deposits = yes
	}
}

## UNINHABITABLE NORMAL PLANETS
planet_event = {
	id = gpm_engine.40
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_capital = no
			AND = {
				is_capital = yes
				has_global_flag = gpm_modifiers_homeworld_enabled
			}
		}
		gpm_engine_forbidden_planets = yes
	}

	immediate = {
		# planet ring spawning, doing it here for scope creep issue as well as finetuning capability. Not as elegant as I would like
		if = {
			limit = { NOT = { has_global_flag = gpm_planetary_rings_disabled } }
			random_list = {
				290 = {
					modifier = {
						factor = 0
						OR = {
							has_planet_flag = gpm_rings_huge
							has_planet_flag = gpm_rings_large
							has_planet_flag = has_rings_01_large
							has_planet_flag = has_rings_02_large
							has_planet_flag = has_rings_03_large
							has_planet_flag = has_rings_04_large
							has_planet_flag = gpm_rings_medium
							has_planet_flag = has_rings_01_sparse
							has_planet_flag = has_rings_02_sparse
							has_planet_flag = has_rings_03_sparse
							has_planet_flag = has_rings_04_sparse
							has_planet_flag = gpm_rings_small
							has_planet_flag = has_rings_01_small
							has_planet_flag = has_rings_02_small
							has_planet_flag = has_rings_03_small
							has_planet_flag = has_rings_04_small
							has_planet_flag = has_rings_01_thin
							has_planet_flag = has_rings_02_thin
							has_planet_flag = has_rings_03_thin
							has_planet_flag = has_rings_01_low
							has_planet_flag = has_rings_02_low
							has_planet_flag = has_rings_01_rare
							has_planet_flag = has_rings_02_rare
						}
					}
				}
				10 = {
					gpm_spawn_planet_ring_modifier = yes
					gpm_spawn_RES = yes
					# Galaxy age setting modifier
					modifier = { factor = 1.2 has_global_flag = gpm_galaxy_age_young }
					modifier = { factor = 0.8 has_global_flag = gpm_galaxy_age_old }
				}
			}
		}

		# Planet Modifier Scaling
		# if = {
			# limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
			# gpm_scale_planet_modifiers = yes
			# gpm_reapply_vanilla_planet_modifiers = yes
		# }

		if = {
			limit = { gpm_is_planet_class_barren = yes }
			gpm_roll_barren_modifiers = yes
		}
		if = {
			limit = { gpm_is_planet_class_frozen = yes }
			gpm_roll_frozen_modifiers = yes
		}
		if = {
			limit = { gpm_is_planet_class_toxic = yes }
			gpm_roll_toxic_modifiers = yes
		}
		if = {
			limit = { gpm_is_planet_class_molten = yes NOT = { has_planet_flag = gpm_guardian_partner } }
			gpm_roll_molten_modifiers = yes
		}

		# remove % of base energy and mineral deposits
		gpm_remove_galaxy_generation_deposits = yes
	}
}

## NUKED PLANETS
planet_event = {
	id = gpm_engine.50
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_capital = no
			AND = {
				is_capital = yes
				has_global_flag = gpm_modifiers_homeworld_enabled
			}
		}
		gpm_engine_forbidden_planets = yes
	}

	immediate = {
		# planet ring spawning, doing it here for scope creep issue as well as finetuning capability. Not as elegant as I would like
		if = {
			limit = { NOT = { has_global_flag = gpm_planetary_rings_disabled } }
			random_list = {
				140 = {
					modifier = {
						factor = 0
						OR = {
							has_planet_flag = gpm_rings_huge
							has_planet_flag = gpm_rings_large
							has_planet_flag = has_rings_01_large
							has_planet_flag = has_rings_02_large
							has_planet_flag = has_rings_03_large
							has_planet_flag = has_rings_04_large
							has_planet_flag = gpm_rings_medium
							has_planet_flag = has_rings_01_sparse
							has_planet_flag = has_rings_02_sparse
							has_planet_flag = has_rings_03_sparse
							has_planet_flag = has_rings_04_sparse
							has_planet_flag = gpm_rings_small
							has_planet_flag = has_rings_01_small
							has_planet_flag = has_rings_02_small
							has_planet_flag = has_rings_03_small
							has_planet_flag = has_rings_04_small
							has_planet_flag = has_rings_01_thin
							has_planet_flag = has_rings_02_thin
							has_planet_flag = has_rings_03_thin
							has_planet_flag = has_rings_01_low
							has_planet_flag = has_rings_02_low
							has_planet_flag = has_rings_01_rare
							has_planet_flag = has_rings_02_rare
						}
					}
				}
				10 = {
					gpm_spawn_planet_ring_modifier = yes
					gpm_spawn_RES = yes
					# Galaxy age setting modifier
					modifier = { factor = 1.2 has_global_flag = gpm_galaxy_age_young }
					modifier = { factor = 0.8 has_global_flag = gpm_galaxy_age_old }
				}
			}
		}

		# Planet Modifier Scaling
		if = {
			limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
			# gpm_scale_planet_modifiers = yes
			gpm_reapply_vanilla_planet_modifiers = yes
		}
		gpm_roll_tomb_world_modifiers = yes
		gpm_roll_planetary_features = yes
	}
}

## HABITABLE NORMAL PLANETS
planet_event = {
	id = gpm_engine.60
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_capital = no
			AND = {
				is_capital = yes
				has_global_flag = gpm_modifiers_homeworld_enabled
			}
		}
		gpm_engine_forbidden_planets = yes
	}

	immediate = {
		# planet ring spawning, doing it here for scope creep issue as well as finetuning capability. Not as elegant as I would like
		if = {
			limit = { NOT = { has_global_flag = gpm_planetary_rings_disabled } }
			random_list = {
				120 = {
					modifier = {
						factor = 0
						OR = {
							has_planet_flag = gpm_rings_huge
							has_planet_flag = gpm_rings_large
							has_planet_flag = has_rings_01_large
							has_planet_flag = has_rings_02_large
							has_planet_flag = has_rings_03_large
							has_planet_flag = has_rings_04_large
							has_planet_flag = gpm_rings_medium
							has_planet_flag = has_rings_01_sparse
							has_planet_flag = has_rings_02_sparse
							has_planet_flag = has_rings_03_sparse
							has_planet_flag = has_rings_04_sparse
							has_planet_flag = gpm_rings_small
							has_planet_flag = has_rings_01_small
							has_planet_flag = has_rings_02_small
							has_planet_flag = has_rings_03_small
							has_planet_flag = has_rings_04_small
							has_planet_flag = has_rings_01_thin
							has_planet_flag = has_rings_02_thin
							has_planet_flag = has_rings_03_thin
							has_planet_flag = has_rings_01_low
							has_planet_flag = has_rings_02_low
							has_planet_flag = has_rings_01_rare
							has_planet_flag = has_rings_02_rare
						}
					}
				}
				10 = {
					gpm_spawn_planet_ring_modifier = yes
					gpm_spawn_RES = yes
					# Galaxy age setting modifier
					modifier = { factor = 1.2 has_global_flag = gpm_galaxy_age_young }
					modifier = { factor = 0.8 has_global_flag = gpm_galaxy_age_old }
				}
			}
		}

		# Planet Modifier Scaling
		if = {
			limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
			# gpm_scale_planet_modifiers = yes
			gpm_reapply_vanilla_planet_modifiers = yes
		}

		# we purge some vanilla features to cut back on total districts after the engine has run
		# now done at gpm_roll_planetary_features_normal_habitable
		# if = {
		# 	limit = {
		# 		planet_size < 11
		# 		is_capital = no
		# 	}
		# 	gpm_remove_random_vanilla_food_planetary_feature = yes
		# }
		# if = {
		# 	limit = {
		# 		planet_size > 10
		# 		planet_size < 15
		# 		is_capital = no
		# 	}
		# 	gpm_remove_random_vanilla_planetary_feature = yes
		# 	gpm_remove_random_vanilla_food_planetary_feature = yes
		# }
		# if = {
		# 	limit = {
		# 		planet_size > 14
		# 		planet_size < 20
		# 		is_capital = no
		# 	}
		# 	gpm_remove_random_vanilla_planetary_feature = yes
		# 	gpm_remove_random_vanilla_planetary_feature = yes
		# 	gpm_remove_random_vanilla_food_planetary_feature = yes
		# }
		# if = {
		# 	limit = {
		# 		planet_size > 19
		# 		is_capital = no
		# 	}
		# 	gpm_remove_random_vanilla_planetary_feature = yes
		# 	gpm_remove_random_vanilla_planetary_feature = yes
		# 	gpm_remove_random_vanilla_planetary_feature = yes
		# 	gpm_remove_random_vanilla_food_planetary_feature = yes
		# }

		gpm_roll_normal_habitable_modifiers = yes
		gpm_roll_planetary_features = yes
	}
}

## CITY PLANETS
planet_event = {
	id = gpm_engine.70
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_capital = no
			AND = {
				is_capital = yes
				has_global_flag = gpm_modifiers_homeworld_enabled
			}
		}
		gpm_engine_forbidden_planets = yes
	}

	immediate = {
		# Planet Modifier Scaling
		if = {
			limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
			# gpm_scale_planet_modifiers = yes
			gpm_reapply_vanilla_planet_modifiers = yes
		}
		gpm_roll_city_planet_modifiers = yes
		gpm_roll_planetary_features = yes
	}
}

## MACHINE PLANETS
planet_event = {
	id = gpm_engine.80
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_capital = no
			AND = {
				is_capital = yes
				has_global_flag = gpm_modifiers_homeworld_enabled
			}
		}
		gpm_engine_forbidden_planets = yes
	}

	immediate = {
		# Planet Modifier Scaling
		if = {
			limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
			# gpm_scale_planet_modifiers = yes
			gpm_reapply_vanilla_planet_modifiers = yes
		}
		gpm_roll_machine_world_modifiers = yes
		gpm_roll_planetary_features = yes
	}
}

## HIVE PLANETS
planet_event = {
	id = gpm_engine.90
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_capital = no
			AND = {
				is_capital = yes
				has_global_flag = gpm_modifiers_homeworld_enabled
			}
		}
	}

	immediate = {
		# Planet Modifier Scaling
		if = {
			limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
			gpm_scale_planet_modifiers = yes
			gpm_reapply_vanilla_planet_modifiers = yes
		}
		gpm_roll_hive_world_modifiers = yes
		gpm_roll_planetary_features = yes
	}
}

## FALLEN EMPIRE PLANETS
planet_event = {
	id = gpm_engine.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {

	}

	immediate = {
		# planet ring spawning, doing it here for scope creep issue as well as finetuning capability. Not as elegant as I would like
		if = {
			limit = { NOT = { has_global_flag = gpm_planetary_rings_disabled } }
			random_list = {
				240 = {
					modifier = {
						factor = 0
						OR = {
							has_planet_flag = gpm_rings_huge
							has_planet_flag = gpm_rings_large
							has_planet_flag = has_rings_01_large
							has_planet_flag = has_rings_02_large
							has_planet_flag = has_rings_03_large
							has_planet_flag = has_rings_04_large
							has_planet_flag = gpm_rings_medium
							has_planet_flag = has_rings_01_sparse
							has_planet_flag = has_rings_02_sparse
							has_planet_flag = has_rings_03_sparse
							has_planet_flag = has_rings_04_sparse
							has_planet_flag = gpm_rings_small
							has_planet_flag = has_rings_01_small
							has_planet_flag = has_rings_02_small
							has_planet_flag = has_rings_03_small
							has_planet_flag = has_rings_04_small
							has_planet_flag = has_rings_01_thin
							has_planet_flag = has_rings_02_thin
							has_planet_flag = has_rings_03_thin
							has_planet_flag = has_rings_01_low
							has_planet_flag = has_rings_02_low
							has_planet_flag = has_rings_01_rare
							has_planet_flag = has_rings_02_rare
						}
					}
				}
				10 = {
					gpm_spawn_planet_ring_modifier = yes
					gpm_spawn_RES = yes
					# Galaxy age setting modifier
					modifier = { factor = 1.2 has_global_flag = gpm_galaxy_age_young }
					modifier = { factor = 0.8 has_global_flag = gpm_galaxy_age_old }
				}
			}
		}

		# Planet Modifier Scaling
		if = {
			limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
			# gpm_scale_planet_modifiers = yes
			gpm_reapply_vanilla_planet_modifiers = yes
		}
		gpm_roll_fallen_empire_world_modifiers = yes
		gpm_roll_planetary_features = yes
	}
}

## HABITATS
planet_event = {
	id = gpm_engine.110
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				OR = {
					has_planet_flag = void_dweller_habitat_1
					has_planet_flag = void_dweller_habitat_2
					has_planet_flag = void_dweller_habitat_3
				}
				has_planet_flag = gpm_is_galaxy_generated_habitat
				has_global_flag = gpm_modifiers_homeworld_enabled
			}
			AND = {
				NOR = {
					has_planet_flag = void_dweller_habitat_1
					has_planet_flag = void_dweller_habitat_2
					has_planet_flag = void_dweller_habitat_3
				}
				has_planet_flag = gpm_is_galaxy_generated_habitat
			}
		}
	}

	immediate = {
		gpm_roll_habitat_modifiers = yes
	}
}

## RINGWORLDS
planet_event = {
	id = gpm_engine.120
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_capital = no
			AND = {
				is_capital = yes
				has_global_flag = gpm_modifiers_homeworld_enabled
			}
		}
		NOT = { gpm_is_planet_fallen_empire = yes }
	}

	immediate = {
		# gpm_roll_ringworld_modifiers = yes
		# deprecated - to review
	}
}

## PRIMITIVES
planet_event = {
	id = gpm_engine.130
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOR = {
			gpm_is_planet_class_ringworld = yes
			gpm_is_planet_class_habitat = yes
		}
		gpm_engine_forbidden_planets = yes
	}

	immediate = {
		# planet ring spawning, doing it here for scope creep issue as well as finetuning capability. Not as elegant as I would like
		if = {
			limit = { NOT = { has_global_flag = gpm_planetary_rings_disabled } }
			random_list = {
				140 = {
					modifier = {
						factor = 0
						OR = {
							has_planet_flag = gpm_rings_huge
							has_planet_flag = gpm_rings_large
							has_planet_flag = has_rings_01_large
							has_planet_flag = has_rings_02_large
							has_planet_flag = has_rings_03_large
							has_planet_flag = has_rings_04_large
							has_planet_flag = gpm_rings_medium
							has_planet_flag = has_rings_01_sparse
							has_planet_flag = has_rings_02_sparse
							has_planet_flag = has_rings_03_sparse
							has_planet_flag = has_rings_04_sparse
							has_planet_flag = gpm_rings_small
							has_planet_flag = has_rings_01_small
							has_planet_flag = has_rings_02_small
							has_planet_flag = has_rings_03_small
							has_planet_flag = has_rings_04_small
							has_planet_flag = has_rings_01_thin
							has_planet_flag = has_rings_02_thin
							has_planet_flag = has_rings_03_thin
							has_planet_flag = has_rings_01_low
							has_planet_flag = has_rings_02_low
							has_planet_flag = has_rings_01_rare
							has_planet_flag = has_rings_02_rare
						}
					}
				}
				10 = {
					gpm_spawn_planet_ring_modifier = yes
					gpm_spawn_RES = yes
					# Galaxy age setting modifier
					modifier = { factor = 1.2 has_global_flag = gpm_galaxy_age_young }
					modifier = { factor = 0.8 has_global_flag = gpm_galaxy_age_old }
				}
			}
		}

		# Planet Modifier Scaling
		if = {
			limit = { NOT = { has_global_flag = gpm_scaling_multiplier_disabled } }
			# gpm_scale_planet_modifiers = yes
			gpm_reapply_vanilla_planet_modifiers = yes
		}
		if = {
			limit = { gpm_is_planet_class_city = yes }
			gpm_roll_city_planet_modifiers = yes
		}
		else_if = {
			limit = { gpm_is_planet_class_city = no }
			gpm_roll_normal_habitable_modifiers = yes
		}
		gpm_roll_planetary_features = yes
	}
}

# spawn primitive relic worlds
country_event = {
	id = gpm_engine.999
	hide_window = yes
	is_triggered_only = yes

	trigger = {

	}

	immediate = {
		random_galaxy_planet = {
			limit = {
				is_moon = no
				gpm_is_planet_class_normal_uninhabitable = yes
				has_owner = no
				NOT = { exists = space_owner }
				# Ego system
				NOT = { solar_system = { has_star_flag = gpm_guardians_ego_system } }

			}
			gpm_create_primitive_relic_world = yes
		}
		random_galaxy_planet = {
			limit = {
				is_moon = yes
				gpm_is_planet_class_normal_uninhabitable = yes
				has_owner = no
				NOT = { exists = space_owner }
				# Ego system
				NOT = { solar_system = { has_star_flag = gpm_guardians_ego_system } }
			}
			gpm_create_primitive_relic_world = yes
		}
		random_list = {
			50 = { }
			25 = {
				random_galaxy_planet = {
					limit = {
						is_moon = yes
						gpm_is_planet_class_normal_uninhabitable = yes
						has_owner = no
						NOT = { exists = space_owner }
						# Ego system
						NOT = { solar_system = { has_star_flag = gpm_guardians_ego_system } }
					}
					gpm_create_primitive_relic_world = yes
				}
			}
			25 = {
				random_galaxy_planet = {
					limit = {
						is_moon = no
						gpm_is_planet_class_normal_uninhabitable = yes
						has_owner = no
						NOT = { exists = space_owner }
						# Ego system
						NOT = { solar_system = { has_star_flag = gpm_guardians_ego_system } }
					}
					gpm_create_primitive_relic_world = yes
				}
			}
		}
	}
}